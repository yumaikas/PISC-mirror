/* Dictionaries and their utilities */

/* Place an empty dictionary on the stack */
: <dict> ( -- dict ) "<dict>" extern-call ;

/* Get a value from the dictionary for each word in a quotation */
: dict-get-many ( dict quot --  ) "dict-get-many" extern-call ;

/* Does this dict have this key? */
: dict-has-key? ( dict key -- dict bool ) "dict-has-key" extern-call ;

/* Set the key to the value, leaving the dict on the stack */
: dict-set ( dict value key -- dict ) "dict-set" extern-call ;

/* Get the value from the dictionary */
: dict-get ( dict key -- value ) "dict-get" extern-call nip ;

: dict-if-empty-stack ( .. -- dict? ) stack-empty? [ <dict> ] when ;
: dict-if-not-dict ( .. -- dict ) dup typeof "Dictionary" str-neq [ <dict> ] when ;
: ensure-dictionary ( .. -- dict ) dict-if-empty-stack dict-if-not-dict ;

/* Fetch from dictionary */
:PRE -$ ( dict key -- val ) dict-get ;

/* Set dictionary value, and set option (in the tradition of shells) */
:PRE -: ( dict? val key -- dict ) [ [ ensure-dictionary ] dip ] dip dict-set ;

/*  Set an entry to true for each unicode character in this string */
:PRE -% ( dict? key -- dict ) [ ensure-dictionary ] dip [ t swap dict-set ] each-char ;

:PRE -? ( dict key -- dict ? ) dict-has-key? ;

: quot>dict ( quot -- dict ) get-locals call <dict> [ dict-set ] each-local drop-locals ;