// Code generated by go-bindata.
// sources:
// scripts/.term_posix.pisc.swp
// scripts/backstory.txt
// scripts/gamesave.pisc
// scripts/intro.pisc
// scripts/lib.pisc
// scripts/main.pisc
// scripts/map.pisc
// scripts/markets.pisc
// scripts/saving.pisc
// scripts/ships.pisc
// scripts/term_posix.pisc
// scripts/term_win.pisc
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _scriptsTerm_posixPiscSwp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x99\xcf\x8e\xdb\x54\x14\xc6\xbf\x29\xbb\x3a\x8e\x61\xd8\xd3\x83\x3b\x12\x93\x4a\x6e\xfe\x78\x9a\x29\x53\xa1\x91\x3a\xea\x08\x50\x18\x8a\xfa\x47\x42\x69\x85\x1c\xfb\x26\xb5\x92\xf8\x86\x6b\xa7\x21\x42\x94\x1d\x7b\x78\x00\x9e\x00\x90\x60\x0f\x7b\x10\x0f\x30\x4b\x9e\x80\x05\x4f\x80\xae\xe3\x10\x7b\xec\x30\x3b\x50\xa5\xf3\x5b\xc4\x3e\xe7\x7c\xe7\xde\x73\xbf\x2b\x45\x8a\x32\x68\x3d\x7e\xef\x03\x3a\xbc\x79\x00\x00\xaf\x02\x9f\xfa\x1f\xf5\x7f\xbf\x72\x63\xef\xaf\x37\x80\xe5\x7c\xea\x85\x63\x2f\xc6\x25\xc4\x42\x3d\x17\xea\x32\x15\xf0\x62\xbd\x60\x73\x24\x7d\x19\x88\x66\xac\xfc\xe6\x2c\x8c\xfd\xa6\x3f\x0d\x9a\xa7\x61\xe4\x4d\x4e\x95\x8c\x92\x50\xa8\x66\xec\xab\x70\x96\xc4\xcd\x44\xa8\xe9\x27\x33\x19\x87\x9f\xdd\xd4\xca\xcb\x37\x61\x18\xa6\xcc\x3c\x19\x3a\xb7\x4d\xb8\x9d\x76\x4b\x87\xd7\xed\x37\xe9\xf5\xdd\x47\xff\xf7\x54\x0c\xc3\x30\x0c\xc3\x30\x0c\xc3\xfc\x87\x24\xb3\x1d\x7c\x09\xe0\x4a\x16\xbf\x95\x3d\x77\x2e\x3c\x19\x86\x61\x18\x86\x61\x18\x86\x61\x18\x86\x79\x79\xf1\x02\xa0\x7b\x15\xf8\xf3\xea\xea\xff\xff\xf5\xef\xff\x5f\x2c\xe0\x67\x0b\xf8\xc6\x02\x02\x0b\xb8\x6b\x01\x37\x2c\x60\xd7\x02\x5e\xb3\x80\x57\x2c\xe0\xbc\x0e\xfc\x58\x07\xbe\xaa\x03\x1f\xd7\x81\x56\x1d\xd8\xa9\x03\xe7\x26\xf0\xbd\x09\x7c\x67\x02\xdf\x9a\x40\x64\x02\x77\x4d\x60\xd7\x04\xfe\xa8\x01\x3f\xd5\x80\x17\x35\xe0\x7e\x0d\xa0\x1a\x70\xad\x06\xec\xd4\x80\xdf\x0c\xe0\x57\x03\xf8\xc1\x00\xbe\x36\x80\xd8\x00\x1e\x1b\xc0\x23\x03\x38\x32\x80\x6b\x46\x36\x27\xc3\x30\x0c\xc3\x30\x0c\xc3\x6c\xe5\x28\x0f\x85\xb1\xb3\x8c\x8e\x69\x9f\xc6\xe4\x38\x74\x4c\x0d\xa2\x7e\x9a\x3c\xa6\xa7\xab\xb7\x48\xbf\x0d\x42\x92\x8a\xee\xe0\x28\xcb\xe4\xf4\xed\x76\x8b\xde\x59\x97\x96\xc5\x52\xa7\x9d\x96\x56\xb5\x89\x18\x26\x85\x72\xf7\xf6\xa6\x51\x85\xa3\x67\x17\xaa\x87\x9b\x6a\x20\x17\xc5\x4d\xbb\xdd\x4d\x71\x3e\x2b\x96\x6e\xe5\xf6\xf4\x94\x92\x8b\x42\xb9\xa3\x97\xed\xd3\x48\x24\x63\xb1\xa4\xb7\xf5\x80\xfa\xa0\x43\x7a\x4a\xe1\x70\xbd\xa4\x88\x12\xa1\x8a\x47\x71\xd7\xab\x0e\x3c\x7f\xec\x2c\x9e\x85\x89\xa0\x7d\x5d\x15\xb1\x9f\x85\x0d\xb2\x0f\x0e\x6d\xf2\xe5\x44\x2a\xc7\x97\x81\x48\x97\x4b\xf5\xfe\xd2\x8b\x36\xf2\x34\xd2\xea\x6e\xb5\x7a\xea\x8d\x44\x94\x78\x9b\x86\x75\x42\xf7\xdc\xaa\xee\x19\x4c\xe6\xb9\x81\xd2\x48\xab\x0f\xaa\xd5\x4b\x31\x99\xc8\xc5\x46\x9f\xc5\xba\xc3\xad\xee\x18\x29\x21\x72\x47\x58\x85\x5a\xdf\xa9\xd6\x2b\x11\x6c\xd4\x3a\xd0\xda\xf6\xb6\xd9\x3d\x7f\x9c\x1f\x5e\x87\x5a\xdf\xba\xa0\xbf\x9e\xb9\xa9\x73\xb1\xbe\x8c\x6d\xf7\xe0\x96\xef\xa1\xfa\x0a\xdc\xf2\x15\xfc\x9b\xfb\x6e\x85\xfb\x95\xc6\xbb\x65\xe3\xb7\x7b\xee\x96\x3d\xdf\x66\xb7\x5b\xb6\xbb\xca\x69\xb7\xc2\xe9\x2d\x26\xbb\x65\x93\x4f\xa5\x12\x39\x93\xcf\xce\x7a\xab\xbe\xb3\x1e\x35\xf4\xc7\x59\x2f\x5d\xb1\x90\xb6\x9f\xa8\x27\x91\x9d\xe6\x1f\x7e\x78\xbf\x77\xef\xf4\xe1\xaa\xd8\xa0\xbd\xcf\xe9\xde\x83\x13\xb2\xfb\x77\xde\xb5\xe9\x8b\x54\x71\xd2\x7b\x50\xaa\x76\xde\xb7\x0b\xba\x99\x0a\xa3\x24\x1d\xe7\x64\x22\x3c\x45\xb1\x9f\x7a\xe0\x45\x01\x4d\xe5\x73\x41\xfe\x5c\xc5\x52\x51\x22\x29\x91\xb3\xf4\xcb\x45\xcf\x9a\x3b\xc9\x3e\xa5\x0f\xc7\xc9\x92\x22\xf6\xa9\x41\x47\x69\xf2\x9f\x5d\x6d\xda\x4b\x13\xf6\x74\x35\xdb\xdf\x01\x00\x00\xff\xff\x3c\xf6\xa2\xd6\x00\x30\x00\x00")

func scriptsTerm_posixPiscSwpBytes() ([]byte, error) {
	return bindataRead(
		_scriptsTerm_posixPiscSwp,
		"scripts/.term_posix.pisc.swp",
	)
}

func scriptsTerm_posixPiscSwp() (*asset, error) {
	bytes, err := scriptsTerm_posixPiscSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/.term_posix.pisc.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1532060537, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsBackstoryTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x92\x51\x6e\xdc\x30\x0c\x44\xaf\x32\x07\xd8\x2c\xd0\x8f\x1e\x21\x1f\xfd\x28\x10\xa0\xb9\x00\x2d\x8f\x2d\x62\x65\x49\x15\xe9\x75\x7c\xfb\x42\xca\x6e\x1b\xf4\xd3\x30\xc5\x79\x9c\x99\xd7\x8f\x9a\x4a\x63\x33\x48\x23\x78\x67\x46\x2e\x07\x36\xa9\x55\xf3\x8a\xb2\x3b\x3c\x12\x77\x69\x5a\x76\x43\x92\x4c\x43\x59\x60\x49\xab\x55\x09\xbc\xe2\x67\x31\x47\x65\xa9\x89\x30\x72\x83\x17\x4c\x44\x28\xd9\x99\xbd\x7f\x99\xcb\x89\x92\xc7\xa6\xda\x57\x78\x5f\xe1\x91\xda\x30\x69\xf3\x78\x81\x18\xa6\xe2\x11\xb6\x4f\x63\x2d\x24\xcf\xff\x44\x06\x9c\x37\x4a\x88\x6c\x9d\xa3\x26\x09\xb4\x2b\xde\xb4\x89\xd3\x2e\x58\x1a\x75\x8d\xce\x66\x97\xcf\xa7\xdb\xbe\xae\x69\xdc\x95\xf4\x46\xdc\x95\x58\x4a\xc3\x22\xee\x34\xbf\xe0\xf7\xae\xe1\x46\x73\x4c\x7b\xb8\x5d\xf1\x36\xb0\xa4\x9d\x58\x12\xe9\x86\xad\x98\xa7\x13\xb5\x15\x67\xf0\x07\x6c\x2c\x5b\x57\x7d\x8f\x6c\xc4\x6e\x9c\x1f\xb7\x0a\xec\x34\xe7\xf6\x72\xa8\x11\xdc\xaa\xb6\xce\x5c\xf6\x3c\xe3\x57\x49\x17\x4c\xbb\x23\x95\x55\xcd\x35\x18\x36\xb9\xd1\x20\x58\x25\xc9\xc7\xf9\x72\xe8\x4c\x94\x4c\x64\x4a\x7b\xd1\xad\x16\x33\x9d\x12\xaf\x78\xed\x79\xe8\x32\x06\x83\x6b\x40\xdb\x13\x71\x88\xe1\x39\x73\x19\xa6\x52\x5a\x3a\xbf\xd8\xa5\xd9\x5c\x26\x4d\xea\x4a\x83\xd5\x46\x99\x9f\x11\x2d\xd2\x86\x43\x43\xd5\x63\x2b\xfb\x1a\x7b\xcc\x8f\x34\xdf\xa3\x1a\x16\x09\xbe\xb7\x7e\x5e\x24\xac\x04\xa5\x9f\x48\x5c\x1c\x13\xa3\xe6\xf9\x8a\x1f\x3d\xd8\x72\xc3\xcc\x20\x33\x6d\x78\x2b\x5f\x08\xe6\xa6\x77\x3e\xdc\xe9\x2c\x89\x60\xee\x52\x63\x72\x2b\xbd\x6c\x1f\x95\x4d\x37\x66\x97\xd4\xcd\x1c\x4b\xfb\x6d\x25\xa7\x13\x87\x7a\x1c\xf2\xb2\xf6\x22\x76\xe2\x99\xe2\xf1\xb3\x39\xc5\x88\x23\x96\x3e\x95\x69\xf6\x24\xfd\x2b\xbf\xb4\x71\x41\x7f\xe9\x51\xfc\xbf\xbf\x41\xb6\x27\x9b\x84\xc0\xea\x9c\x7b\x01\x05\x1b\x25\x8f\x7a\x7b\x93\x3b\xd3\x48\x1a\x49\xcc\xf1\xed\x3b\x4e\x4a\x33\x44\xb9\x13\x16\xcb\x91\x71\x94\x3c\x8f\x36\x7a\xd4\xbc\xda\xf5\x4f\x00\x00\x00\xff\xff\x94\x12\x47\x4d\x4c\x03\x00\x00")

func scriptsBackstoryTxtBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBackstoryTxt,
		"scripts/backstory.txt",
	)
}

func scriptsBackstoryTxt() (*asset, error) {
	bytes, err := scriptsBackstoryTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/backstory.txt", size: 844, mode: os.FileMode(436), modTime: time.Unix(1504845781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsGamesavePisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func scriptsGamesavePiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGamesavePisc,
		"scripts/gamesave.pisc",
	)
}

func scriptsGamesavePisc() (*asset, error) {
	bytes, err := scriptsGamesavePiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/gamesave.pisc", size: 0, mode: os.FileMode(436), modTime: time.Unix(1504845781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsIntroPisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\x4f\x6b\xeb\x46\x10\x3f\x5b\xa0\xef\xf0\xc3\x04\x92\x80\xec\xfa\xd2\x8b\x7b\x08\xa5\x10\x28\xf4\x96\x40\x09\xc6\x87\xb1\x34\xd2\x0e\x5e\xcf\xaa\xbb\x23\x29\xfa\xf6\x65\xa5\x98\x17\x1e\x3c\x74\xd2\xce\xec\xfc\xfe\xcd\x96\xc5\x11\xa2\x16\x03\x9e\xd0\xd1\x8d\xb1\xdb\x41\xf9\xd3\xf0\x5c\x16\xc7\x7c\x50\x16\x7f\xfd\xf3\x56\x16\x65\xb1\x7d\xeb\xa9\xe6\x0a\xe6\x18\xaf\xa2\xe4\xf1\x1a\x83\x9a\x70\xcc\xd5\x77\xc7\x48\x46\x31\xc1\xd1\xc8\xb8\x70\x7d\x0d\xca\x0d\xe6\x30\x54\xe0\x91\x15\x93\x63\xcd\xbf\x98\x38\x32\x2e\x83\x81\x30\x31\xa3\x76\xe2\x9b\x7d\x59\xfc\x6d\x8f\x09\x84\x28\xe9\x3a\xc3\x4b\xcb\x15\x52\x46\x6c\x29\x8a\x76\x15\x26\x47\x86\x49\xcc\xa1\x97\x48\xc6\xa9\x42\xba\x0d\x5d\xe7\x39\xa6\x0a\xa4\x0d\x7a\x4f\xca\x46\x71\x46\x1f\xbc\xd4\x5c\x16\xa2\x20\xd4\x41\x93\x91\x1a\x92\xc5\xa5\xbf\x82\x06\x83\x05\xdc\x58\x4d\x82\x82\x92\x71\x94\xd0\xa4\x0a\x4a\xa3\x74\xb4\x9c\x36\xd2\xb6\x52\x0f\xde\xe6\x75\x7c\x16\x3e\x98\x65\xbd\x63\x90\x06\xa1\x5d\x09\xee\xf1\x11\x86\xc7\x91\xd1\x47\xee\x29\x72\x83\x36\x44\x98\x93\x84\x86\xe6\xa5\x1a\x11\x99\x1a\xd1\x0e\x26\x37\xc6\x44\x09\x0d\x37\x52\x93\x71\x93\x89\xd4\x8e\xa2\xa5\xb2\xc8\x30\xc9\x49\x8f\xd0\x73\x5c\x58\x54\xd9\xb2\x98\x81\x22\xaf\x97\x2d\xc0\x22\x89\xe6\x69\xa2\x48\x72\x1b\x3c\x59\xb8\x9b\xb0\xb6\xd3\x28\xda\xa5\xb2\x58\xc2\xa0\x5b\x18\xf4\x0b\xe9\xe1\xf7\xc3\xe1\xb0\xc7\xbf\xe2\xfd\x12\x06\x7f\xf6\x3e\xe4\xd1\xf7\xfc\x5e\xf0\xf4\xf1\x9b\x3e\x97\xc5\x16\x7d\x14\x35\xaf\x39\xde\x03\x8e\x57\x9c\xf0\x70\x85\xa4\xdd\xac\x2f\x8b\x83\x67\x9c\xd0\xb1\x5d\x79\xce\xd5\x33\x26\x27\x9e\x73\xf7\xda\xa6\x2f\x38\xa1\x2c\x36\xdb\x77\x17\x86\xce\x55\xe8\x39\x3a\xea\xd3\x0f\x2c\x64\x51\xd9\x2c\xd2\x60\x8e\xe3\x22\x70\x8f\x3f\x5b\xe3\x08\xf2\x7e\x59\xb6\x19\x53\xd0\x47\xc3\x85\xd1\x85\x2c\x9a\x74\x9e\x1c\x47\xfe\x46\x70\x33\x91\xd8\x8e\x75\x09\x67\xb3\x39\x65\xff\xb2\x41\xbb\x1b\xeb\x80\x33\xca\xe2\xbc\xec\xdf\x9d\xda\x9c\xa9\x9d\xd0\x4b\x7d\xdd\x2d\x7e\x9f\x71\x6f\xf8\x23\x0b\x38\x7e\x2b\xfd\xfc\x2e\xb2\xa4\xe5\x49\x6c\xb6\x4b\xf0\xf1\xce\xcb\x02\x94\xb9\x01\xad\x11\x5e\xb8\xcd\xc6\x66\x93\x6b\xd2\x9c\xd9\xc8\x1e\xe6\x62\x36\x63\xdd\x9c\x0a\x2e\x4c\x3c\x72\xdc\xe3\x97\x62\x4e\xf8\x6f\x10\xdb\x2d\x1c\xce\x5f\xf4\xd6\xef\xff\x00\x00\x00\xff\xff\x8f\x37\x15\x2f\xbb\x03\x00\x00")

func scriptsIntroPiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsIntroPisc,
		"scripts/intro.pisc",
	)
}

func scriptsIntroPisc() (*asset, error) {
	bytes, err := scriptsIntroPiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/intro.pisc", size: 955, mode: os.FileMode(436), modTime: time.Unix(1504845781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsLibPisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xcd\x6a\xdc\x30\x14\x85\xd7\x16\xe8\x1d\x0e\xc3\x2c\x52\xc2\x2d\xe9\xd6\x75\x33\x9b\x6e\xb2\x69\x0a\x59\xa4\xe0\x0c\x65\x22\xdd\xda\xaa\x23\xc9\x95\x64\x9c\xbc\x7d\x91\x35\x3f\x86\x40\x76\x96\xce\xa7\xef\xea\xc8\x89\x83\x25\xeb\x35\x63\xf3\x78\xf7\xe3\xfb\xfd\xe3\xc3\x06\xfc\x0f\x2d\xa4\x00\x80\x4d\x54\xc1\x8c\x29\x3e\x3d\x65\xf0\xf7\x6c\xdc\xe7\xd1\x44\xb5\x41\x77\xb0\x4c\x25\x94\x62\x8f\xb9\x67\x27\x85\x14\x2b\xdd\xcf\xfb\x87\xbb\x5f\x1f\xc9\x46\x1f\xcd\xeb\xc7\xba\x1a\xf3\xc1\x24\x62\x97\x38\xe0\x0a\x44\xf8\x04\x29\xaa\x16\x1d\xa7\x81\xdf\x60\x62\xc9\x76\xd8\xa3\x45\x3e\x67\x5e\x58\x8a\xaf\xe5\x6c\x33\x8d\xa4\xfd\xec\xc8\xb2\x9b\x6e\x71\x05\x37\x59\xf2\x63\x8a\x59\xe4\x9f\xff\x16\x59\xed\x26\x2b\x45\x75\x83\xda\x92\xd1\xaf\x52\x54\x09\xb5\xea\xbd\x8f\xc6\x75\xcb\x30\x29\xaa\xea\x38\xb0\x1e\xf2\x62\x3b\xac\x26\xb7\xf8\x73\xe1\x51\xee\x8e\x0b\x75\x08\xc1\xcf\x3b\xb4\x79\xe7\x6c\xd1\x26\x2c\xeb\xad\x36\x21\x43\xd3\x98\x3d\x44\xcb\x0d\x70\xea\xbf\x02\x72\x8d\x8c\x5c\x5f\xbf\x47\xca\xce\xd6\x4d\x16\xd6\xeb\x4b\x8d\x73\x74\x83\x06\x6d\x01\xbe\x80\x8e\xc0\x4a\x71\xfe\xda\xe7\x22\xac\x72\xc7\x46\x1b\x95\x6e\xcb\x63\x6f\x57\xed\x9a\x86\xb4\x77\xbc\x2b\xc1\xc9\xd4\x34\xa4\x7a\x1f\xd9\x1d\x47\xb7\x58\x3c\x25\x19\x83\x57\x34\xf0\xdb\xfa\xc8\x37\xb4\x78\x3e\xa8\x81\xe6\xde\x24\x3e\xbd\xda\x82\xf7\xa6\xeb\x5f\x4c\xd7\xa7\xe5\x3f\xfe\x0f\x00\x00\xff\xff\x55\xdb\xba\xd7\xa0\x02\x00\x00")

func scriptsLibPiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsLibPisc,
		"scripts/lib.pisc",
	)
}

func scriptsLibPisc() (*asset, error) {
	bytes, err := scriptsLibPiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/lib.pisc", size: 672, mode: os.FileMode(436), modTime: time.Unix(1506682674, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsMainPisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x4b\x6f\xe3\x36\x14\x85\xd7\x12\xa0\xff\x70\xa0\xf1\x62\x66\x60\x25\x7d\xad\x34\x83\x14\x85\xe3\xb4\x01\x3c\x76\xd1\x71\x56\x8e\x17\x14\x75\x2d\x11\xa6\x48\x95\xa4\xed\x18\x41\xfe\x7b\x41\x4a\x7e\xa4\x13\x24\xf1\x4a\xba\xfc\xee\xb9\x0f\x1e\xf9\x03\xe6\xb5\xb0\x10\x16\x2b\xa1\x98\xc4\xca\x68\xe5\x04\x99\x21\x18\x2a\xd6\x10\x84\xb2\xad\x30\x54\x72\x14\x7b\xd8\x96\x71\x1a\xc2\x19\x56\xd2\x4e\xa8\xd2\x0e\xc1\x54\x09\x06\x29\x9c\x93\x84\x42\x38\xe8\x15\x24\x53\x94\x15\xcc\x52\x09\xae\x9b\x82\xb9\x24\xbe\xfc\x9c\xc4\xb7\xd7\xe3\x3f\xbe\xe7\xf8\xc6\xf6\x05\xf9\x72\x25\xac\x6e\x08\x3b\xb6\x87\xd3\x10\xca\x51\x65\x98\x23\x48\xad\x2a\x38\xd1\x90\x2f\xb4\x25\xe9\x8f\x34\x5c\x4d\xe0\x1b\xe9\x36\x86\x7c\x8d\xd0\xca\x8a\x19\x32\x36\x89\x3f\x5f\x26\x71\x12\xa7\x96\x1b\xd1\x3a\x7b\x7f\x2f\x45\x71\xd1\x0a\xcb\xd3\x30\x43\xd6\xc5\xcf\x81\x86\x99\x35\x39\xfb\x3a\x24\x94\x33\xfa\x75\xc4\xb2\xad\x50\xd5\x4b\x4c\x12\xe7\xd0\x2d\x29\xa1\xaa\xac\x21\xb5\xc1\xc7\x6e\x9f\x59\x06\x45\x0f\x0e\x9f\x92\x38\xca\x7d\x24\x89\xa3\xdf\xf0\x75\xd3\x66\xa5\xde\xa9\x80\x5e\x21\x6f\x92\x38\x1a\x34\xc8\xae\x6a\x51\xd5\x52\x54\xb5\x43\xfe\x6d\x3c\xbd\x4b\x62\x44\x0b\x14\x8c\xaf\xb3\x42\x32\xbe\xc6\x12\xf9\xe8\xaf\xd9\xed\x68\x9c\xc4\x00\x30\x9a\x7c\xc7\x07\x8c\x24\x31\x13\x16\x66\xb9\x21\x52\x28\x68\xa5\x0d\xa1\x35\x64\x49\x39\xe1\xd7\x5b\x13\x7c\x2d\x2f\xd8\x09\xa0\x35\x42\x85\xc6\x7d\x89\x41\x83\x8b\x52\x2b\xfa\x1d\xcb\x10\x48\xe2\x28\x1a\x3c\x76\x45\x0e\xbf\xf9\xec\xef\xc9\xf8\x66\xfe\x3c\x38\x9d\x4e\x3c\x1b\xf1\x3d\x53\x48\x6f\x82\xa9\x6e\x7a\x53\xa5\xc7\x53\x43\x25\xc2\x43\x0a\xa4\xf8\x09\x7e\x36\xa4\x53\xda\xe1\x4f\xd6\x50\x8a\xbe\xa5\x03\x1e\xa8\x9f\x7b\x6a\xa2\x59\xf9\x0a\xf6\x4b\x8f\xcd\x5a\x27\xb4\xb2\x2f\x43\xbf\xf6\xd0\x3f\xe4\x36\x46\x79\xfb\x19\x62\x12\x52\xac\x7e\x54\xdd\xd5\xc2\x11\xd2\xbb\xf6\xf2\x5a\xef\x02\xcb\x6b\xad\x2d\x0d\x31\x56\x8e\x4c\x08\x68\xb5\x12\xa6\x41\x8a\x2e\xe7\xe9\xb4\xcc\xc8\xdf\xe3\x45\x6b\x34\xcf\xd6\xb4\x4f\xe2\x68\x89\x5d\x2d\xa4\xbf\xf6\xc7\xb0\x02\x2c\x10\x8c\x86\xe5\xe1\x55\x6a\x56\x66\xc1\x2c\xcb\x3e\xa2\xbb\x59\x8e\xef\xf4\x20\xdc\x89\x78\x0a\xb7\xc5\x6b\x6d\x49\x65\xa2\x7c\xc0\x96\x78\xc6\x1c\x92\xf8\x4b\xe7\xc3\x93\xe0\xc9\x84\xf8\x84\x60\xbf\x60\x99\xc1\x23\xd2\xf9\xec\x7a\x96\xe3\xb6\x69\x25\x35\xa4\x5c\xe7\x66\x9f\x69\xfd\x54\xe8\x47\x92\x0a\x0b\xa4\x48\x51\x1a\xdd\x62\x89\x2f\x5e\xdf\xb2\x2d\xfd\x5f\xff\x5d\xf2\x3e\xf1\x6d\xf9\xc3\xf4\x1f\xdf\xab\x7b\xc8\x78\x53\xf9\xb4\xc7\xf3\xc6\x4f\xe3\xfc\xbb\x39\x9c\xf7\x9b\x6c\x98\x50\x7d\x1f\x9d\xed\xbf\x96\x82\xbb\xab\xe7\x5f\x7a\xce\x37\xc6\x64\xd6\x31\x47\xcf\xa0\xfe\x73\xf7\x91\x05\x1c\x96\x58\x60\x10\xc4\x07\xa7\x04\x70\x26\xe5\xb9\x02\x8e\x7e\xf1\x79\x15\xb9\xe0\x22\xff\x7c\xf6\x2f\x70\x98\xd0\x2f\xa5\x3b\x3c\x76\xde\x9b\xc0\x37\x9e\xc4\xff\x05\x00\x00\xff\xff\x9f\x9d\xf0\xd5\xee\x05\x00\x00")

func scriptsMainPiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMainPisc,
		"scripts/main.pisc",
	)
}

func scriptsMainPisc() (*asset, error) {
	bytes, err := scriptsMainPiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/main.pisc", size: 1518, mode: os.FileMode(436), modTime: time.Unix(1532060772, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsMapPisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x5f\x8b\x13\x31\x14\xc5\x9f\x33\x90\xef\x70\xa8\x03\xae\x8b\xb1\xfa\x9a\x95\xfa\x50\x16\x14\xd6\x0a\xca\xe2\x43\xe9\x43\x9a\x5c\x9b\xb0\xf9\x33\x24\xa9\xb3\x20\x7e\x77\x49\xa6\xe2\x22\xfb\x30\x19\x72\xcf\xb9\xe7\xde\xfc\xd6\xd7\x7c\xe0\xc3\x57\x8a\x86\x32\x14\x4e\xca\xab\xea\x34\x82\x9a\xf0\x23\xa7\x00\x4b\x99\x9a\xe3\x7a\xdd\x4e\x89\x52\x55\x16\x4d\xbd\xc2\x49\x05\x82\x10\x88\xf4\x58\xf1\x0a\x7c\x60\x7c\xb8\x69\xae\xee\xb3\x69\x16\x73\xca\xde\xe0\x0a\x93\x57\x91\xea\x33\x0d\xb2\x97\xe4\xa2\xb7\x46\x36\x5e\xbc\x62\x63\xa8\xe8\xec\xa6\xea\x52\xc4\x94\x5d\xac\x3e\xfe\xe7\xf0\x49\xab\x26\x17\x98\xf3\xd4\xbf\x3d\xc4\x26\xb6\xc8\x03\x7e\x92\xee\x7b\x4a\x9f\x74\xe9\x82\x4e\x21\xa8\x68\x9e\x6a\xda\x26\xa7\xa9\xb4\xd4\x6e\xf3\x14\xf1\x0e\x02\xef\xcf\x93\x30\x69\x8e\x22\x50\x3c\x6f\x20\xc3\x32\x39\x40\x6c\xac\x3b\x59\xef\x4e\xb6\x42\x7e\xbe\xdd\xdd\xf3\x01\x6c\x8f\xa3\xd2\x0f\xe2\xe8\x95\x7e\xc0\x01\x72\xfb\xf1\xcb\xa7\xed\xed\x42\x82\xed\x31\x06\xbc\x31\x29\xd2\x07\x1c\xf8\xc0\x5e\xe0\x3b\xbd\xcc\x84\x4c\xe2\x78\x76\xde\xb8\x78\x42\xb5\x84\x36\x09\xa4\xb4\x45\x75\x81\x30\xbb\x6a\xa1\x90\xa9\x54\xd4\x84\xd1\xf5\x28\x3e\x30\xb6\xbd\xfb\xd6\x7f\x7d\xc8\x3f\x32\x8c\xbd\x85\x6c\x2e\x36\xfe\x6a\xe7\x13\x4e\x9d\xc8\x6e\x77\xd7\xcb\x99\xcc\x22\x5f\xb8\x48\xdf\xaf\x6c\x74\x68\xef\xc1\x0a\x58\x61\xf4\xb8\xe4\xff\x6d\x5b\xa0\xb5\xfd\xfa\x75\xb6\xae\x12\x56\xf7\xd3\xba\x61\x6a\x1b\x16\xf2\xa4\xeb\x6b\x50\xac\x94\x5b\x41\xdb\x94\x0a\xad\xb0\x04\xfc\xe6\x03\x3b\x60\xb6\xce\xd3\xc2\xf2\x82\xbe\xd3\xd1\x36\x15\x8a\xc2\x99\xc7\x3e\x45\x55\x3e\xdc\xe0\x4f\x00\x00\x00\xff\xff\xb8\x77\xfd\xe3\x9a\x02\x00\x00")

func scriptsMapPiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMapPisc,
		"scripts/map.pisc",
	)
}

func scriptsMapPisc() (*asset, error) {
	bytes, err := scriptsMapPiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/map.pisc", size: 666, mode: os.FileMode(436), modTime: time.Unix(1504845781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsMarketsPisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x31\x6f\xdb\x4e\x0c\xc5\xf7\x03\xee\x3b\x10\xf0\x92\x04\x7f\xc3\x7b\xfe\x43\x01\x2b\x71\x9a\xc1\x68\x50\x17\xcd\x4c\x9f\x18\x1d\x91\xd3\x51\xe0\xf1\xec\xfa\xdb\x17\x27\xbb\x70\x81\x74\xc8\xc2\x41\xd4\xfb\xbd\x27\x3e\x2d\xc0\x3b\xef\x56\x77\x6d\xbe\x46\x34\xe0\x02\x16\x09\x28\x48\x96\xf1\x04\x83\x70\x1e\xc0\x04\xf6\x04\x89\xdf\x09\x38\x83\x45\x2e\x30\xe0\x48\x5f\x9a\x6a\xb1\x80\x35\x16\x0e\xf0\x24\xd2\x97\x99\x83\x46\xea\xdd\x46\xa4\xf7\x6e\x53\x29\x79\xf7\x4d\x69\xb5\x0b\x8a\xd3\x45\xf1\x80\x86\xd0\xe1\x54\x6a\xa2\x59\xf3\xa2\x32\x28\x8e\xc5\xbb\x9f\xdc\x93\x14\xef\x9e\x70\x6c\xab\x2d\x4e\x65\xd5\x45\x54\x2b\x17\xed\x57\xc2\xc3\xe9\xea\xf6\x5d\xf6\xd2\x76\xdb\x9a\xd9\x58\x72\xf1\x6e\x5d\x39\xf5\xcb\x4e\xc9\xc8\xbb\xc7\x7c\x60\x95\x65\x89\x4c\xa9\xe7\x3c\x5c\x28\x1b\xc5\x81\x13\x5d\x39\x3b\x49\xa8\xf0\x82\x99\x52\xf1\xae\x93\x71\xaa\x46\x0a\x5d\xe4\xa9\x78\xf7\x20\xa1\x8e\x94\x9b\xd1\x2e\xd4\x34\x59\xd5\x73\xf0\xbb\x55\x9b\xf7\x50\xa2\x1c\x97\x23\xea\x3b\x19\xdc\xc0\x72\x09\xb7\xf0\xff\x9f\xd3\xbe\x8a\xa6\x1e\x50\x43\x24\x3b\x4d\x67\x5d\x27\x49\xf2\xe9\xde\xbb\xc7\x5f\x93\xa8\x15\xd8\xcf\x47\x1c\x5a\x9c\xff\xe0\xc8\x16\x01\x41\x31\xf7\x32\x42\x88\x98\x03\x81\xbc\x01\xcd\x2f\xb7\x4a\x24\x13\x88\x45\x52\x68\xc8\xb6\x6b\x52\x40\x03\x84\x24\x47\x98\x94\x03\x35\xa3\xad\x64\x2c\xc6\x01\x7e\x50\x88\x59\x82\x62\x68\xb6\xcf\xe3\x3f\x6c\xe9\x92\xa5\x6f\xf5\x84\x4b\x3d\x8d\x7d\x40\x65\xa9\x05\xfe\x8a\xaf\x93\x28\x1a\x17\x83\xe7\xdc\xd7\x62\x9f\x23\xc7\xb9\xbc\xf9\xe1\xfc\xe7\x75\x4a\x67\xc8\x06\xf7\xca\x9f\x84\x7c\xe8\x6e\x4d\x55\x9b\xb4\x7d\xe6\x96\x4c\x3f\x60\xe8\x40\x7a\xb2\xc8\x79\xb8\x52\x26\x39\x92\xae\x38\xbf\xa5\x4a\xed\xbc\x37\x91\xe2\xed\xb9\xd2\xdf\x01\x00\x00\xff\xff\x8c\x0c\x77\x50\x16\x03\x00\x00")

func scriptsMarketsPiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMarketsPisc,
		"scripts/markets.pisc",
	)
}

func scriptsMarketsPisc() (*asset, error) {
	bytes, err := scriptsMarketsPiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/markets.pisc", size: 790, mode: os.FileMode(436), modTime: time.Unix(1504845781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsSavingPisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xe3\x36\x10\x3d\x4b\x80\xfe\xc3\x5b\x46\x07\x3b\x2d\x93\xf6\xaa\x04\x29\x92\xcd\x62\xb1\xa7\x00\xad\xd3\x8b\xed\x03\x2d\x8f\x63\xc2\x8a\xa4\x90\x94\xbd\x46\x90\xff\x5e\x0c\x49\xdb\xf2\x36\xf1\x62\x81\xc0\x22\x39\x1f\x9c\x79\xef\x8d\x94\xcb\x73\x64\x69\x96\x2e\xba\xba\xc4\x40\xe3\x5b\xed\xe8\x89\xcc\x10\xa3\x6d\x4b\x83\x21\xac\x33\xba\x7e\xc2\x6b\x96\x26\x86\x5c\x67\x6a\x88\xe8\x22\xb2\xf4\xed\x10\x39\xc7\x7d\xd3\xcd\x2a\x3a\x15\x18\x3c\x8e\xe3\x14\x6e\x8d\x51\xdb\x53\x61\xff\x52\xe9\x9a\x1f\xaf\xd3\xa5\xc3\xbd\x2e\xdd\xc9\xfb\x74\xe9\x74\x53\x2b\xb3\x3d\x0e\x9e\xe1\xae\x69\x2a\x52\xf5\xa9\xe0\xe8\x72\x1c\x69\xf1\x8f\xf7\x3c\x15\x18\x3c\x76\x71\xe7\x97\xfc\x5b\xc0\x92\xd1\xaa\x92\xcf\xaa\x6d\x39\x60\x00\x29\xb1\xdb\x0c\xb3\x34\xb9\xe6\x8e\x6e\xb2\x34\x49\xc6\xd8\x18\xed\x48\xfa\x16\xa7\xb8\xbe\x96\x87\x3e\xfa\xf6\x35\x95\xc1\x1c\xf0\xe9\x9b\x74\x1d\x23\x23\x55\x47\x69\x3d\x09\x31\xb1\x5f\xf7\xad\xb1\x1f\x6f\x0d\x8d\xf4\xad\xb3\xa6\xa9\x82\x2d\xa2\x93\xa5\x49\xe1\xa4\x53\x3e\x4b\x96\x26\x63\x14\x6b\x64\x69\x02\xe4\xf1\x18\xf9\x1a\x6e\xdb\x52\xb3\x00\x37\x24\x97\xca\xca\x15\x6d\xff\x0a\x69\x3f\xf2\x7a\x22\x87\x69\x74\x79\x85\x60\xb0\x21\x7a\x4e\x02\xa5\xaa\xeb\xc6\x61\x46\xb0\x6a\x4d\xf3\x0b\x81\x37\x90\x31\x8d\xf1\x71\x80\x5e\x64\x69\x32\x45\x96\x5e\x45\xfc\xd5\x9a\xbb\x53\x8e\x30\x40\xab\xdc\x12\x61\x23\x65\x5c\x0c\x51\x84\x45\xc1\xd6\x2c\x4d\xf2\xb0\x8d\x37\x16\xfc\xcc\xd2\x64\x81\xc2\x76\x65\x49\xd6\xfa\x76\x73\x9f\xaa\x69\xa9\x96\x0b\x5d\x91\xf4\x38\x19\x14\x0f\x8f\x23\x2e\x5f\x14\xb8\xc0\xc0\xf7\x84\xb5\xaa\x3a\xc2\x8a\xb6\x7c\xa7\x3f\x19\x86\x66\xdb\xce\x2e\x71\x25\x90\x3f\x3c\x8e\x70\x11\x90\xae\x74\xed\x79\x09\xb2\x60\x48\x93\xc4\xdb\xaf\xaf\x65\xcc\x9d\xfc\xc1\x1b\xa7\x66\xbe\xd1\xe2\x89\x9c\x6c\x3a\xd7\x76\xce\x17\x46\x2f\x98\x77\x2d\xf2\x58\x2c\x1a\xb3\x2f\x1c\x53\x14\xf4\xc2\xdc\xe5\xce\x03\xdb\x9b\x13\xd0\x4b\x8d\x31\x0e\xc9\x10\x61\x38\xd2\xe4\x66\x49\xbd\xf0\x38\x9f\x3f\x09\x0d\x72\xdd\x45\xee\x4a\xa9\x1b\x77\xa0\xf9\x73\xe0\xd4\xfb\x47\xb8\x9a\x85\x27\xa0\x60\xf6\xfd\x6d\x7d\x96\x39\x59\xc2\xd9\x3c\x70\x65\xd5\x58\x8a\x7c\x9f\xe1\x6f\x6a\x2b\x55\xb2\x6a\x36\xda\x2d\x31\x11\xd0\x35\xdc\x92\xe2\xc4\xfe\x0e\xd7\x60\x45\xd4\x42\x3b\x2c\x4c\xf3\x8c\x99\x21\xb5\x62\xed\x77\x2d\xeb\xe5\xa5\x6b\x78\x1c\xd4\x82\xf5\x62\x9d\x09\x42\x31\x18\x42\x4c\x26\x82\x7f\xf8\x61\x9d\x91\x66\x77\xd3\x44\x84\x73\x71\x7c\x7e\xc5\xe9\x36\x46\xb5\xd2\xe7\xb4\xff\xcf\xc7\x01\x1b\xd5\xfa\xa8\xb2\xa9\x4b\xe5\xe2\xe1\x61\x1f\x55\xdc\x63\x61\x80\xd2\x7d\x0f\x3a\x92\x12\x43\x96\x48\xd1\x2a\x6d\xac\xe7\xbd\x60\xa3\xbc\x61\x60\xa2\x16\xcf\xf0\xad\x2e\x0d\x29\x4b\x1e\x06\xa7\x66\x52\xd7\x73\xaa\x19\xff\xdc\xa7\xea\x5a\xc8\x1b\xa7\x66\xf8\x13\xbf\xc1\x2b\xcb\x7f\x19\x92\x1f\x5e\x5d\xc5\x5c\xdb\x56\xb9\x72\x19\x06\xa0\x27\xda\xfd\xcb\xa3\xe8\x09\x51\x4c\x9c\x40\x1e\xca\xe1\x94\x11\x1a\x52\x0e\x51\x26\x53\x14\xa3\xdb\x3b\x7f\x95\x98\xd4\x02\xfb\xe0\xd1\xed\x1d\x44\x98\x80\xc3\x29\x97\x1b\xfa\x1c\xa3\x58\x21\xae\xe5\x4d\xbe\x42\xb1\x66\x2d\xe5\x6b\xec\x2a\x44\xe1\x0b\xf3\x93\x78\xc8\x0c\x9f\x97\xcb\xda\xdf\x14\x10\xc8\xd7\x51\x7b\x3e\x00\x47\xf6\x55\x5f\x11\x7d\x36\x0f\x3e\x02\x17\xfb\x2b\xfc\x4c\xfa\xe9\x26\x55\x2e\xf9\x8d\xf7\x1e\xcc\x72\x0f\xf3\x55\x96\x26\x07\x82\x79\x56\x02\xbf\xbc\x62\x7a\x99\x5d\xaa\xe8\xf9\x23\x76\x4f\x30\xf8\x4b\x1c\x9c\x22\xfb\x94\x82\x7e\x26\x04\xe6\xf6\xb5\x8f\x4e\x1e\xba\x19\xa3\xa0\x77\xd0\xf6\x6c\x10\xff\xed\xa9\x2c\x55\x55\x05\x58\xd7\x54\x7a\x54\x39\x27\xde\x7a\x71\xa7\xf1\x45\x7f\x84\xf8\x0b\x19\x10\xe6\x95\x1f\xa0\x9b\x58\xb5\x1f\xc5\x00\xee\x71\x3b\x57\x87\xf0\x78\x12\x32\xc4\x69\x1e\x7e\xa4\x90\x8f\x13\xa2\x37\xd3\xe1\xb3\x1c\xa7\x3a\x6c\x7e\xb9\x2c\xff\x7d\x0e\x29\xfc\x52\x4a\x60\xc8\x18\xf3\x09\xeb\xb1\xc5\x18\xc2\x09\x4c\xf9\xb9\xe0\xa7\x5e\xec\x84\xf1\x6e\xe6\xf0\x32\xbd\xff\x72\xf7\xf8\x35\x4b\x2f\xcf\xb3\x54\x34\x9d\xbb\x70\xdf\x9d\x80\x7e\x6e\x1b\xe3\x50\xcc\xd9\xe7\x70\x9c\xcf\x7b\xdf\x5a\x6f\x1a\x3d\xdc\x3f\x14\xb8\x9d\xcf\xe1\xc8\x3a\xfb\xe9\x93\x40\x6b\x74\xed\xaa\x7a\x6f\xfc\xdc\xd4\x56\xcf\xc9\xc0\x6e\xb4\x2b\x97\x7c\x39\x0f\x8f\xe5\xb7\x74\x67\x09\xa5\xd1\x6e\xa6\x1d\x9c\x21\xb2\xbd\x70\xfe\xef\xea\x0c\x5f\x1f\xef\xbe\xdc\x67\xe9\x7f\x01\x00\x00\xff\xff\x21\x77\x70\x05\xca\x0a\x00\x00")

func scriptsSavingPiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSavingPisc,
		"scripts/saving.pisc",
	)
}

func scriptsSavingPisc() (*asset, error) {
	bytes, err := scriptsSavingPiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/saving.pisc", size: 2762, mode: os.FileMode(436), modTime: time.Unix(1511844548, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsShipsPisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xdc\x36\x10\x3d\x5b\x80\xfe\xc3\x03\x12\xa0\xb6\xb1\x6b\xc7\x75\x4f\xea\x22\x45\xea\x24\x68\x80\xe4\xd2\x04\xc8\xa1\xe8\x61\x24\x8e\x24\x76\x25\x52\xe5\x50\xbb\x56\x8b\xfe\xf7\x62\x48\x6d\xec\x24\x6d\x81\xc2\x30\x56\x22\xe7\xe3\x71\xe6\xcd\xa3\x9e\xe0\x63\x4f\x11\x56\x10\x7b\xc6\xe8\x0d\x0f\x68\x7d\x80\xf4\x76\x12\x74\xde\xba\x0e\xd1\xa3\xe6\x1f\xca\xa2\x2c\x9e\xe0\x2d\x39\x46\x5c\x26\x16\x34\xe4\x50\x33\x6e\xe0\xdb\xe4\xfc\x1d\x46\xfa\xcd\x87\xbc\x9b\xad\x9f\x61\x8b\x1f\x49\x6c\x53\xe1\x8e\x1c\x1a\x0a\x61\x41\xad\x0b\xfa\xdc\x79\xb5\xb9\xc1\x16\x2f\x29\xd2\x63\x13\x43\x91\x34\xec\x81\x82\xf5\xb3\x60\x6f\x9d\x91\x8d\xa2\x0c\x64\x2c\x45\xeb\x9d\x22\xe4\xc1\xb0\xb9\xc2\x0b\x34\xbe\xd9\x4f\x36\xa2\x27\xc1\x4d\xf6\x96\xc1\x47\xd4\x0b\x0c\xb7\x34\x0f\x51\x33\x7d\x8b\x2d\x7e\x62\x3a\x2c\xff\x82\x66\x03\x1f\xd0\x33\x1d\x2c\x07\x74\xde\x1b\x81\xba\xdd\x62\x8b\xd7\x81\x3a\x3b\x70\x85\x37\x82\x7a\xb6\x43\xc4\xd1\xc6\x1e\xd2\xfb\x66\x0f\xaa\xc5\x87\x5a\x14\x54\xf4\xa0\x61\xf0\x47\xc4\x40\x4e\x26\x1f\xa2\x1e\xa3\xcd\xde\x39\xa6\x56\xa6\xc2\x6e\x20\xc7\xcf\x71\x0e\xb1\x7f\xe4\x82\x62\xbb\x85\x2e\xe2\x02\x65\x71\x56\xa5\xa5\x4a\x77\xcb\xe2\xec\x4f\x3c\x4d\x76\xbf\xa0\xc5\xaf\x88\x76\x64\xc1\x5f\xa8\xd6\x1a\x9e\xed\x8c\x6d\xe2\xf3\xb2\x38\x3b\x7b\x9a\x96\xb0\xdb\x6d\x4f\x7b\x67\x4f\x53\xa4\xdd\x6e\xab\xbf\x65\xf1\xfd\x9a\x5f\x1b\xac\xf9\x1d\x8d\x9c\xf2\x8a\x02\xd0\xd5\x15\x40\x5e\xab\x74\xff\xf3\x14\x79\x63\xb7\xdb\xa6\x87\xb4\x94\x82\xec\x76\xdb\x6c\x9c\x52\x5c\x5f\x96\xc5\x2b\x6a\xfa\x1c\xd2\x9e\xca\xe6\xe7\x54\x91\xd5\xf5\xc1\x40\x3b\x47\x30\xc1\x3b\xc6\xe0\xc9\xa8\x5d\xe3\x5d\x0c\x7e\x18\xd8\x68\x23\x95\x62\x77\xb9\xcf\x65\xf1\x26\x53\xee\xd4\x77\x2b\x30\x2c\x31\xf8\x85\xcd\x06\x8b\x9f\xd1\x29\x22\x2b\xf0\x07\x0e\x57\x28\x8b\x77\x5e\xe2\x4a\x6a\xe3\xdd\x37\x11\x31\x2c\xda\xad\xd5\x0d\xf4\xc0\x21\x7f\xe4\x03\x87\x0d\xca\x62\x0a\xdc\x72\x08\xeb\x0c\x0c\x4c\x07\x4e\xc1\x7b\x1e\xa6\x81\x45\x94\x2f\x0d\x4d\x71\x0e\x69\xfd\x4a\xcf\xfd\x3e\xe5\xd0\xd9\xe8\xd5\xfc\xe6\xfe\x56\x7d\x6f\xef\x6f\x9e\xc1\x3a\x18\x3b\xb2\x53\xfa\xca\x06\xe4\x0c\x5a\x9b\x8e\x97\xc8\x64\x6c\xdb\x72\x60\x17\x21\xdc\xa9\x59\xa2\xca\xdb\x54\x6d\x8d\xd7\x78\x3d\x92\xc3\x6d\xe2\x8c\x80\x04\x47\x1e\x86\x0d\xde\x8f\xa4\x3f\xef\xd8\xd8\x31\x45\x7d\x4b\xa1\xe3\x04\x26\x07\x5a\x07\xf6\xfc\x12\xd6\x19\xdb\x50\x64\x8c\xe4\x0c\x45\x1f\x96\x53\xb2\x8b\x0a\x29\x9d\x6d\x79\x2b\xf3\xa4\xd4\xbd\x5e\xcb\x7d\xa9\xb5\x78\xe5\x3a\xeb\x58\x2e\x37\x65\xf1\x7a\xe6\x01\x1f\xc8\xed\x2f\xcb\x22\xf3\x6d\xf2\xa6\x2c\xee\x02\x1f\xf1\xfb\x4c\x21\x72\xc0\xf9\x0d\x1a\x7d\x1f\x79\xac\x39\x60\xe2\x00\xe1\x46\x4f\x7e\x51\x16\xb9\xcd\x93\x37\x6a\xb6\xbe\x7c\x66\x50\x16\x1f\x7a\x0e\x0c\xd2\xff\x41\x34\x81\x88\xad\x07\x86\xf3\x6e\x2b\x51\xc1\x07\xf3\xa9\x4e\x55\x42\xee\x5d\x87\x40\xae\x63\x08\x3b\xf1\x41\x70\x0e\xbe\x8f\x41\x5b\x3b\xd6\x14\x11\xfc\xec\x0c\x2e\xca\xe2\x4e\x89\x45\xb5\x96\x2a\x81\x40\x4b\x01\x35\x47\x05\xde\xf4\xe4\x1a\x56\x8e\x4e\x24\xa2\xad\x27\x07\xeb\x64\xca\xe0\xd4\x5d\x5b\x0c\x69\xc8\x39\x3d\x68\x9a\x77\x49\xbc\x88\x1e\xc2\xda\x23\x7d\x48\x46\x2b\xc0\x8b\xb2\xf8\xe0\x8f\x98\xa8\xd9\x53\xc7\x5f\xfa\xf4\x34\x0f\x99\x9b\xd7\x31\x90\x1d\x38\x08\x28\x81\xbd\x78\xd4\x44\xc9\x84\x3a\x50\x58\x14\xd5\xc0\x07\x1e\x44\x71\x52\x18\x7d\xa8\xca\x62\xf0\xc7\x2c\x6c\x35\xa3\x0e\x4c\x4d\x9f\x07\x87\xdc\x02\x8a\xb1\xd9\x97\xc5\xc8\xc6\xce\x63\x85\x8f\x76\x18\x12\xe9\x52\x29\x41\x18\xad\xb3\xe3\x3c\x6a\xb8\x1b\xc8\xdc\x34\x2c\xd2\xce\x83\xfa\x51\xb3\xbf\x2a\x8b\x3e\xeb\xe6\x7f\x39\xde\x7e\xed\x28\x69\x24\x5e\x6a\x87\xe5\x11\x7f\xb3\xe6\x26\x52\xa6\xd6\xbd\x48\xc6\x15\xde\xf7\xde\x47\x81\xc4\xb9\x6d\xcb\xe2\x25\xb7\xec\x1a\xae\x90\x1e\x8c\x80\x3a\xb2\x4e\xe2\x1a\x3b\x13\x47\x36\xe0\x2c\x22\x3e\x6a\xef\x42\xc7\x82\x79\x52\x64\xdc\xd1\xb6\x66\x1a\xcb\xe2\x8d\x77\x95\x5a\x84\x28\x5b\x15\x96\xec\xa9\xa3\x72\xed\x3f\xd1\x2e\x4d\xdb\x0b\x73\xd0\xf6\x9b\xd5\xa4\xc2\xcf\x64\x0d\x07\xdd\xca\x4f\x27\x5f\xe3\x41\xe9\x7a\xe2\xb8\xe4\x0b\xd0\xba\x4e\x36\x30\x3c\xb1\x33\xda\x20\xef\x70\xec\x6d\xd3\x67\x71\xf7\xed\x89\x0c\x2a\x5c\x8b\xce\x9f\x32\x41\xbb\xaf\x7a\x76\x52\xb4\x45\x5f\xf1\xd9\x10\xae\xba\xb4\xc9\xdb\x91\xf6\x9c\x44\x2d\xe9\x9f\x92\x46\x87\x33\x27\x5a\x59\x65\x63\xbe\xb1\x21\x03\x1d\xd8\xe8\xcb\xe2\xe7\x20\xe9\x5e\x7f\xb8\x97\x56\x8e\x2e\x14\xf2\x9d\xf4\x18\x00\x81\xd3\xb8\xeb\x78\xa4\xc4\xf0\xd3\xe4\xd3\x34\x24\x5e\x1f\x95\x06\x29\x83\x3f\x6a\xb1\xfc\xd1\x7d\x1d\x22\xc9\x44\x24\xb7\xdf\x28\xb2\x14\xa5\xd5\x25\xeb\x10\xf5\x9b\x43\xb7\xd2\x87\x87\x42\x52\xe5\xfb\x04\x35\x27\x71\x7c\x1f\x11\xe7\xf0\x0f\xa1\xb3\xea\xd4\xb4\x64\x70\xf9\xf5\x14\xb7\xa6\xe5\x21\x2c\xfd\xaf\xb0\x81\x8f\xdb\x55\xc1\xd6\xc8\x8f\x34\xec\x14\xff\x24\x71\x56\xc0\x36\xf6\x1c\xa0\x32\x98\x6e\x01\xa3\x37\xc2\x3e\x69\xfa\x17\x54\xb0\x6d\xbe\x39\x74\x84\x65\xa2\x26\xb5\x3e\x7f\x81\xc4\x9e\x47\xf5\x73\x3e\xa6\x71\xf9\xfa\xef\xef\x00\x00\x00\xff\xff\x2f\xdf\x8e\xdf\xa5\x09\x00\x00")

func scriptsShipsPiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsShipsPisc,
		"scripts/ships.pisc",
	)
}

func scriptsShipsPisc() (*asset, error) {
	bytes, err := scriptsShipsPiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/ships.pisc", size: 2469, mode: os.FileMode(436), modTime: time.Unix(1504845781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsTerm_posixPisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x94\x41\x6f\xe2\x3e\x10\xc5\xef\xf9\x14\x4f\x69\x0f\xe4\x10\xa9\x01\x17\xfe\xff\x20\xd4\x03\x6a\xb5\x5a\x45\xec\x4a\xed\x8d\x72\x08\x66\xa0\x11\x21\x46\x8e\x59\x14\xad\xf6\xbb\xaf\x6c\xb3\x75\xbc\x86\x95\x90\xf0\xcc\xfb\xcd\x78\xfc\x46\x4a\x0e\x2e\x6a\x21\x53\x2e\x36\x84\x01\xcc\x5f\x9a\x5e\x92\xd4\x72\x24\xc8\x4d\xf2\xfe\x27\x9e\x5f\xe7\x88\x97\x31\xee\x4d\x22\x3e\xc4\xf8\x85\x69\x14\xdd\x61\x5e\x53\x29\xd1\x72\x49\xd4\xa0\x6c\x36\x38\x88\x1f\x04\x7e\x92\xad\x90\x50\x02\x4a\x1c\xd3\x9a\xb6\x2a\xca\x31\x2f\x5e\x31\xd0\x37\x24\xae\xe3\xf0\x6b\x7c\x39\x4d\xbf\xe8\x9e\x47\x59\x35\x0a\xd3\x28\xc7\xdb\xb7\xef\xc5\xf3\xcb\x5b\x50\x61\x39\x4d\x2c\x0a\x2b\x2e\x0a\x24\x88\xdf\xe5\x7b\x13\xdb\xbc\x27\x2c\x0a\xfd\x33\xb3\xbe\x08\x49\xa9\x79\x5e\x1b\xe5\x58\xd7\x25\xdf\x5b\x90\x5a\x9e\xda\x30\x41\x3c\x7a\x88\xfb\xc6\xe8\x8e\x92\x36\x0e\xd4\x81\xc6\xb2\x00\xdb\x19\x13\x3e\x41\x1b\x6a\x74\x18\xa0\x1d\xd5\xb5\x38\x3b\xf6\x12\x6b\x78\x14\xc0\xeb\xfa\x44\xfd\x41\x4f\x64\x40\x16\x80\x87\x72\x47\x8d\x2a\x1d\xfb\x27\xa1\xf1\xc7\x00\xe7\x5d\xd9\x1b\xd7\x44\x1a\x1c\x07\xe0\xf9\xa3\x52\xbd\x09\x6c\xa8\xd1\xc9\x5f\x68\x74\x87\x75\xc9\xf7\x3d\x93\x75\x74\xcb\x69\x16\x3a\x6d\xf8\x6b\x76\xb3\xd0\x6e\xc3\xde\xf2\x9c\x85\x9e\x1b\xfe\xb6\xf1\xec\x8a\xf1\x76\xfa\x6b\xee\xb3\xd0\x7d\x43\xff\x6b\x05\x2c\x5c\x81\x75\xeb\xea\x1e\x58\xb8\x07\x43\xdf\x5a\x06\x0b\x96\x91\xa3\x6a\x53\x6a\x14\xc9\x27\x0c\xb0\xd7\x15\x4f\x48\x90\x8d\x30\x33\xed\xaa\x36\x2d\xa5\x14\x67\x4f\x1d\x4e\x30\xc3\x12\x3b\x52\x7b\xea\xf0\x7f\x86\x19\x56\x58\x62\x8b\x15\xaa\xed\x67\xd7\xd3\xd1\x2b\x1a\x3f\xba\x96\x1b\x71\x6e\x7c\x71\xec\x44\x59\xed\x3e\x94\xaf\x4e\x9c\xaa\x3f\x14\xbe\xf8\x9f\x11\xad\xda\xf9\xaf\x18\x66\xae\xd0\xbf\x30\xcb\x1e\x9c\xd4\xf9\x1a\x96\x97\x56\x2b\x7b\x6a\xf4\x69\x5d\x41\x48\x4c\xa3\xdf\x01\x00\x00\xff\xff\xf6\x1a\xc0\x17\x12\x05\x00\x00")

func scriptsTerm_posixPiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsTerm_posixPisc,
		"scripts/term_posix.pisc",
	)
}

func scriptsTerm_posixPisc() (*asset, error) {
	bytes, err := scriptsTerm_posixPiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/term_posix.pisc", size: 1298, mode: os.FileMode(436), modTime: time.Unix(1532060529, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsTerm_winPisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x93\x41\x8b\xdb\x30\x10\x85\xef\xfe\x15\x0f\xed\x1e\xe2\x83\x61\xed\x68\x9b\xe2\xa5\xec\x21\xb4\x94\x12\x72\xd9\xe3\x6e\x0f\x8e\x32\x4d\x4c\x1c\x2b\xc8\x4a\x43\x28\xfd\xef\x65\xa4\xb4\xb2\xaa\x64\x21\x10\xcd\xbc\x4f\x33\xa3\x37\xb8\x86\xd2\x9d\x36\x85\xd2\x6b\xc2\x04\xee\xaf\x28\x2e\x49\x1a\x14\x72\xd4\x2e\x79\xff\x0b\x9f\x5f\xe6\x10\xaf\x02\xf7\x2e\x21\xf6\x02\xbf\xf1\x94\x65\x77\x98\x77\xd4\x18\x0c\xca\x10\xf5\x68\xfa\x35\xf6\xfa\x27\x41\x1d\xcd\xa0\x0d\xac\x86\xd5\x87\xa2\xa3\x1f\x36\xab\x31\x5f\xbc\x60\xc2\x1d\xf2\x50\xb1\xfa\x26\x2e\xa7\xaf\x5c\xf2\x60\xda\xde\xe2\x29\xab\xb1\x5c\x78\x76\xb9\x40\x0e\xf1\x66\xde\x7a\xe1\xf3\x91\xb0\x5c\xf0\xcf\x0d\xf2\x45\x1b\x2a\xdc\xec\x43\x56\x63\xd5\x35\x6a\xe7\x41\x1a\x54\xe1\xc3\x1c\x62\xfa\x20\xc6\xaf\xe6\x8a\x86\xd6\x01\xe4\x80\xb1\x32\xc1\x36\xee\x85\xff\x40\x1f\x32\x5a\x25\xe8\x99\xba\x4e\x9f\x02\x7b\x89\x19\x9e\x26\xf0\xaa\x3b\xd2\x78\xd0\x23\x39\x50\x26\xe0\xbe\xd9\x50\x6f\x9b\xc0\xfe\x4d\x30\xfe\x98\xe0\xea\xdc\x8c\xc6\x75\x11\x83\x1f\x12\xf0\xb4\x6d\xed\x68\x02\x1f\x32\x3a\xfb\x0f\xcd\xee\xb0\x6a\xd4\x6e\x64\x32\x47\xb7\x9c\x96\xa9\xd3\x8e\xbf\x66\xb7\x4c\xed\x76\xec\x2d\xcf\x65\xea\xb9\xe3\x6f\x1b\x2f\xaf\x18\xef\xa7\xbf\xe6\xbe\x4c\xdd\x77\xf4\x7b\x2b\x90\xe9\x0a\xbc\x5b\x57\xf7\x20\xd3\x3d\x38\xfa\xd6\x32\x64\xb2\x8c\x1a\xed\x50\x50\x6f\xc9\x3c\x63\x82\x1d\xdf\x78\x46\x8e\x72\x8a\x4f\xae\x5c\x3b\x14\x8d\x31\xfa\x14\xa9\x55\x25\x9d\xec\xf5\xe3\x21\x12\x67\x55\xb8\xba\xd6\xa7\x3e\x12\x3f\x3e\x04\xd1\xb4\x9b\xad\x8d\xaf\xce\x82\xca\x5f\x7b\x2c\x3e\x8e\x7a\x9e\xe3\x69\xab\x32\x5c\x8c\x1b\x96\xe5\xa8\xe3\x39\xd6\xf0\x7a\x29\xf5\xdd\x9f\x7a\x3e\xad\x5a\x68\xc3\x7d\xfe\x04\x00\x00\xff\xff\x86\xb3\x64\xa9\xd8\x04\x00\x00")

func scriptsTerm_winPiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsTerm_winPisc,
		"scripts/term_win.pisc",
	)
}

func scriptsTerm_winPisc() (*asset, error) {
	bytes, err := scriptsTerm_winPiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/term_win.pisc", size: 1240, mode: os.FileMode(436), modTime: time.Unix(1506682723, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"scripts/.term_posix.pisc.swp": scriptsTerm_posixPiscSwp,
	"scripts/backstory.txt": scriptsBackstoryTxt,
	"scripts/gamesave.pisc": scriptsGamesavePisc,
	"scripts/intro.pisc": scriptsIntroPisc,
	"scripts/lib.pisc": scriptsLibPisc,
	"scripts/main.pisc": scriptsMainPisc,
	"scripts/map.pisc": scriptsMapPisc,
	"scripts/markets.pisc": scriptsMarketsPisc,
	"scripts/saving.pisc": scriptsSavingPisc,
	"scripts/ships.pisc": scriptsShipsPisc,
	"scripts/term_posix.pisc": scriptsTerm_posixPisc,
	"scripts/term_win.pisc": scriptsTerm_winPisc,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"scripts": &bintree{nil, map[string]*bintree{
		".term_posix.pisc.swp": &bintree{scriptsTerm_posixPiscSwp, map[string]*bintree{}},
		"backstory.txt": &bintree{scriptsBackstoryTxt, map[string]*bintree{}},
		"gamesave.pisc": &bintree{scriptsGamesavePisc, map[string]*bintree{}},
		"intro.pisc": &bintree{scriptsIntroPisc, map[string]*bintree{}},
		"lib.pisc": &bintree{scriptsLibPisc, map[string]*bintree{}},
		"main.pisc": &bintree{scriptsMainPisc, map[string]*bintree{}},
		"map.pisc": &bintree{scriptsMapPisc, map[string]*bintree{}},
		"markets.pisc": &bintree{scriptsMarketsPisc, map[string]*bintree{}},
		"saving.pisc": &bintree{scriptsSavingPisc, map[string]*bintree{}},
		"ships.pisc": &bintree{scriptsShipsPisc, map[string]*bintree{}},
		"term_posix.pisc": &bintree{scriptsTerm_posixPisc, map[string]*bintree{}},
		"term_win.pisc": &bintree{scriptsTerm_winPisc, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

