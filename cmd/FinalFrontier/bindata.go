// Code generated by go-bindata.
// sources:
// scripts/.lib.pisc.swp
// scripts/.term_posix.pisc.swp
// scripts/backstory.txt
// scripts/gamesave.pisc
// scripts/intro.pisc
// scripts/lib.pisc
// scripts/main.pisc
// scripts/map.pisc
// scripts/markets.pisc
// scripts/ships.pisc
// scripts/term_posix.pisc
// scripts/term_win.pisc
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _scriptsLibPiscSwp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\xda\xcb\x4f\x13\x51\x14\xc7\xf1\x2f\x6a\x62\x67\x3a\x0f\xa2\xc6\xf5\xa5\xb2\xd1\xa4\x14\x5f\x11\x53\x74\x65\x48\x88\x22\x46\x82\xa8\x80\xa6\x4c\x87\x76\x2c\x7d\x38\x2d\x82\x06\x75\xe1\x46\x63\xf8\x0f\xd4\xbf\x40\xdd\x18\xd9\x69\x74\xe7\xca\x8d\x5b\x5c\x68\x22\xac\x8c\xee\xdc\x9a\xd2\x12\x85\xd2\xa7\x22\x31\x39\x9f\xcd\x64\xee\x9c\xf3\xbb\xb7\xb7\x93\x49\x9a\xce\x44\xf7\x85\xfe\x01\x75\xac\xeb\x08\x40\x3b\x98\xc6\xfb\x4b\xf7\xf6\x1e\xe8\x9c\x3c\x0f\x37\xa7\xd3\x31\x2f\x15\xcb\x53\x47\xde\xf5\x6f\xb8\x7e\xbd\x2a\xb8\xb3\x1a\x18\x49\x64\x9d\x6c\xdc\x8d\xe4\x7d\x27\x92\xf3\xf2\x4e\xc4\x49\xc7\x23\x7d\x5e\x26\x36\xd5\xe7\x67\x33\x05\xcf\xf5\x23\x79\xc7\xf7\x72\x85\x7c\x64\xca\x9b\xe8\x2a\x96\xd4\x4f\x17\x42\x54\x35\x5d\x98\x0c\xf7\x58\xc3\x87\x0f\x1d\xec\x2e\x9e\xee\x0b\x75\xa8\xdd\xbb\x86\xb7\x7a\x55\x42\x08\x21\x84\x10\x42\x88\x7f\xa8\x90\x6b\xe3\x2e\xb0\xad\x7c\x1e\x28\x1f\xdb\xd6\x1d\x85\x10\x42\x08\x21\x84\x10\x42\x08\xf1\xff\x8a\xc5\xa1\xcb\x86\x6b\x76\xe9\xff\xff\xd5\xdf\xff\x4b\x36\xbc\xb2\x61\xc1\x86\x97\x36\x3c\xb6\xc1\xb7\x21\x55\xae\xf5\x6c\x48\xd8\xd0\x63\x43\x87\x0d\x3b\x6d\xf8\x66\xc1\x92\x05\x8b\x16\x7c\xb0\xe0\x85\x05\x8f\x2c\xb8\x65\xc1\x65\x0b\x4e\x5b\x70\xdc\x82\x3d\x16\x04\x2c\xd8\x61\xc1\x0f\x13\xbe\x9a\xb0\x6c\xc2\x5b\x13\xde\x98\xf0\xda\x84\x27\x26\x3c\x30\xe1\xbe\x09\x23\x26\xf4\x9a\xd0\x61\x82\x32\x61\xbb\x09\x5f\x0c\x78\x67\xc0\x33\x03\x9e\x1a\x30\x6f\x40\xd6\x80\x8c\x01\x27\x0d\x68\x37\x60\x31\x08\xcf\x83\x30\x17\x84\x33\x41\x50\x41\xf8\xae\xc3\x67\x1d\x3e\xe9\xb0\xa0\xc3\xbc\x0e\x57\x74\x38\xaa\x43\x40\x87\x8f\x1a\x2c\x68\xf0\x50\x83\xdb\x1a\xcc\x69\x10\xd7\x60\x40\x83\xfd\x1a\x2c\x07\xb6\xf8\x0b\x13\x42\x08\x21\x44\xa3\xa2\x68\xa3\xaa\x33\x1d\xf6\xe2\xb3\xea\x84\x1a\x55\x13\x31\x27\x15\x9e\x49\x7a\x05\x57\x8d\xab\x99\xa4\x9b\x51\xe3\xaa\xb7\x37\x9c\xf4\x12\xc9\x29\x2f\x91\x2c\x14\xcb\x9d\xa4\xeb\xa4\x4a\xe3\x39\x3f\xdb\x48\x42\x95\x9a\x6a\xad\xd1\xb5\x17\x9a\x58\x63\x83\xa5\x7f\x3f\xb1\xb4\x41\x0d\x17\x37\xb9\xed\x9b\x91\xdb\xfa\x26\xaf\xdc\x08\xcd\xd4\x6f\x66\x76\xe9\xa6\x6c\xae\xa3\x95\x9b\x7e\x73\x67\x88\xd6\x6e\xa8\x13\x57\xab\xbb\x66\xeb\x1f\xcc\xda\xe2\x9c\x4d\x6f\xfd\xc6\xf3\xd4\x8b\x89\x56\xe9\xab\x98\xa9\x54\xf5\xab\x76\x4d\x57\xf1\xe4\xf7\x81\x86\x22\x2b\x8b\xd6\x8d\xd4\x5f\x7b\xbd\x59\x9a\x7c\x9c\x56\x04\x6f\xf0\x71\xab\x3e\x8a\xab\x66\xb6\xb8\x88\x8a\x27\x1b\x94\xc6\x51\x4a\xa9\x50\xf9\xf5\xf6\xb1\xb1\x82\xeb\xa7\xaf\xe6\xb2\x79\x6f\x76\xe5\x35\xf7\x90\x4a\xc4\xd2\x6e\xb8\x74\x99\xe2\xc5\x70\x3a\x1b\x77\x55\xe8\xdc\xe0\x50\xff\xc5\x90\x72\xaf\xab\x51\x55\x2b\x6a\xc6\xcb\xd4\x0e\x1a\xe9\x3f\x7b\x6a\x70\x64\x68\x35\xea\x67\x00\x00\x00\xff\xff\xef\xc8\x33\xdf\x00\x30\x00\x00")

func scriptsLibPiscSwpBytes() ([]byte, error) {
	return bindataRead(
		_scriptsLibPiscSwp,
		"scripts/.lib.pisc.swp",
	)
}

func scriptsLibPiscSwp() (*asset, error) {
	bytes, err := scriptsLibPiscSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/.lib.pisc.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1506675739, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsTerm_posixPiscSwp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x99\xcf\x6b\x63\x55\x14\xc7\xbf\x23\x2e\xbc\x2f\xbf\x74\x14\xd7\x67\x32\x19\x6c\xad\xaf\x49\x9b\xfe\x18\xd3\xce\x04\xa9\x16\x95\x5a\xc4\x51\x41\x32\x51\x5e\xdf\xbb\x49\x9e\xc9\x7b\x37\xdc\xf7\x32\x99\x28\xa3\x1b\x71\x29\x32\x88\xee\x15\x5c\x08\xe2\x42\x5c\xb8\x71\x31\x7f\x80\xa8\xa0\xa0\xb8\x75\xa9\x7f\x41\x41\xb9\xf7\xbd\x34\x69\x93\xda\x9d\xe3\xc0\xfd\x2c\x9a\x9c\x73\xbe\xe7\xdc\xfb\xbe\x27\x0d\x94\x1e\x54\x5e\x7d\xee\x05\xda\x5c\x5e\x03\x80\x07\x81\x0f\xf3\xdf\xbf\xf6\xde\xa3\x8f\x97\x5a\x2f\x01\xa3\x41\xe0\xf8\x5d\x27\xc2\x19\x44\x5c\xde\xe0\xf2\x2c\x15\xf0\xce\x78\x60\xb9\x2d\x5c\xe1\xf1\x72\x24\xdd\x72\xdf\x8f\xdc\xb2\x1b\x78\xe5\x5d\x3f\x74\x7a\xbb\x52\x84\xb1\xcf\x65\x39\x72\xa5\xdf\x8f\xa3\x72\xcc\x65\xf0\x46\x5f\x44\xfe\xcd\x65\xa5\x3c\xfb\x10\x83\xc1\x30\xcb\x20\x6e\xd9\x97\x73\xa8\xae\xae\x54\x54\x78\xb1\x78\x81\x1e\x3e\xff\xca\xdd\xbe\x95\xc1\x60\x30\x18\x0c\x06\x83\xc1\x60\xf8\x0f\x89\xfb\xe7\xf0\x2e\x80\xfb\xd2\xb8\x9e\xbe\x9e\x3b\xf1\x6a\x30\x18\x0c\x06\x83\xc1\x60\x30\x18\x0c\x06\x83\xe1\xde\xc5\xf1\x80\x47\x1e\x00\x9e\x60\xc9\xff\xff\xc7\x7f\xff\x7f\x57\x00\x3e\x2a\x00\xad\x02\xb0\x5f\x00\x36\x0a\xc0\x7a\x01\x78\xac\x00\x1c\xe6\x81\x9f\xf3\xc0\x17\x79\xe0\x56\x1e\x78\x39\x0f\x5c\xca\x03\x87\x39\xe0\xc7\x1c\xf0\x43\x0e\xb8\x93\x03\x6e\xe7\x80\x56\x0e\xd8\xc8\x01\xf7\xe7\x80\x5f\xb2\xc0\xa7\x59\x20\xce\x02\x4f\x67\x81\x9d\x2c\x70\x29\x0b\xfc\x95\x01\xfe\xcc\x00\x3f\x65\x80\x6f\x32\xc0\x27\x19\xe0\xad\x0c\x30\xca\x00\xaf\x67\x80\x9d\x0c\x70\x3e\x03\x3c\x94\x01\x0e\x2d\xe0\x77\x0b\xf8\xcd\x02\x7e\xb5\x80\xaf\x2d\xe0\x4b\x0b\xf8\xcc\x02\x3e\xb6\x80\xdb\x16\xf0\xbe\x05\x38\x16\xf0\xa2\x05\x3c\x65\x01\x17\x2c\xe0\x6f\x06\xfc\xc1\x80\x3b\x0c\xf8\x96\x01\x5f\x31\xe0\x73\x06\x7c\xc0\x80\x98\x01\x4d\x06\x2c\xb3\xc4\x87\x25\x76\x97\x97\x62\x30\x18\x0c\x06\x83\xe1\x7f\xc3\x16\x58\x83\x4a\x81\xed\x7b\x37\xe9\x0a\x35\xe8\xc0\x71\xbb\xf6\xb0\xe3\xc7\x9c\x9a\x34\xec\xf0\x90\x9a\xb4\xbd\x6d\x77\xfc\x76\xa7\xe7\xb7\x3b\xb1\x92\xbb\x1d\xee\x76\x93\x7c\x5f\x0a\xd7\xee\xf2\xd1\xd4\x14\x9d\x77\x3b\x22\xe2\xa1\x8a\x75\xc5\xed\x08\x11\xf9\x61\x3b\x29\x7a\x22\xe4\x75\xb0\x6d\xcf\x77\xe3\xab\x04\xd6\xa4\x9a\x1e\x09\xc6\x92\x33\xc1\x18\x4b\xa7\x55\x68\x9b\x1a\x54\x0a\x07\x01\xd5\xc6\xf3\x4f\x48\x74\x31\x10\x5e\x2a\xd0\x15\xcf\x97\xe4\x47\xb6\x27\x86\x61\x9d\x1a\xb4\xb4\x34\xd3\x9b\x2a\x06\x7d\x55\xb7\xed\x93\xf5\x36\x8f\xbb\x7c\x44\x35\xcf\x97\x60\xac\xd4\x55\x5a\x47\x4a\x31\xac\x53\xe3\x28\xc1\xc3\x98\x4b\xd5\xdf\x52\x4f\x70\xf4\x88\xda\x36\x4c\x66\x74\x95\x07\x60\xf1\x44\x04\x56\x39\xba\x6d\x2d\x1c\x04\xa8\xd1\xf6\xa0\xaf\xaf\x6b\x07\x3c\x1c\x5c\xa5\x05\x0a\x07\x81\x2d\xfa\x71\x44\xb6\x4d\xe2\xe0\x4d\x5a\xa4\x74\x5b\xe9\xd8\xc9\xf9\x4d\x6a\xe8\x53\xfd\x1e\x47\x8d\x86\x8e\x1f\x27\x15\x5a\x50\xbd\xaa\xaf\xa6\xd4\xa3\xb0\x4e\x0b\xd4\x55\xb9\x3a\x2d\x12\x35\x74\x32\x69\xf7\x23\x3b\x54\xef\x0e\x7c\x12\x92\xb6\x92\x86\xe3\xfa\x95\x95\x0a\x5d\x19\x97\x46\xc7\x4b\xab\x2b\xba\x94\xd4\x7a\xbc\x15\x1f\x2b\x6f\x5c\x9e\x34\x4a\xf5\x21\x3a\x5e\xdd\x9c\x54\x93\x7d\x4d\x17\x37\x26\x45\xb5\xaa\xe9\xd2\xfa\xd4\x99\xe9\x6a\xa6\xca\xab\x9b\xfa\xf3\x9c\x9a\xf5\xa4\xba\x60\x53\x6f\xaa\x49\x7e\x6b\x3c\x32\x35\x70\xfa\x51\xaa\xe3\xa9\x53\xbf\x09\xda\x47\x1e\xb9\x69\xb8\x48\xc5\xb5\xcd\x22\xb9\xa2\x27\xa4\xed\x0a\x8f\xeb\x71\x5a\xef\x8e\x9c\x70\x22\xd7\x91\x52\x6f\xcc\x57\x07\x4e\x9b\x87\xb1\x33\x69\x18\x27\x54\xcf\xfa\xfc\x9e\x83\xde\x60\xea\x42\x3a\x52\xea\xb5\xf9\xea\x11\xef\xf5\xc4\x70\xa2\x4f\x63\xd5\x51\x9d\xdf\xd1\x96\x9c\x4f\x3d\x42\x12\x2a\xfd\xea\x7c\xbd\xe4\xde\x44\xad\x02\xa5\x5d\x39\xed\xee\x8e\xdb\x9d\xbe\xbc\x0a\x95\xbe\x72\x42\x7f\x31\x75\x53\xe5\x22\xb5\x8c\xd3\xf6\x50\x9d\xdd\xc3\xfc\x15\x54\x67\x57\xf0\x6f\xee\x57\xe7\xb8\x3f\xd7\xf8\xea\xac\xf1\xa7\x7b\x5e\x9d\xf5\xfc\x34\xbb\xab\xb3\x76\xcf\x73\xba\x3a\xc7\xe9\x53\x4c\xae\xce\x9a\xbc\x2b\x24\x9f\x32\x79\x7f\x7f\x2f\xe9\xdb\xdf\xa3\x45\xf5\x63\x7f\x4f\x4f\x3c\x96\x2e\x5e\x97\xd7\xc3\xa2\xce\xef\xec\x5d\x1b\x7f\xc5\x94\xde\xa6\x67\xae\xed\x50\xb1\xb1\xfa\x7c\x31\x7d\xb7\xf5\x6c\x91\x6e\x51\x5f\xfa\x61\xac\x0f\xdb\xe9\x71\x47\x52\xe4\xea\x27\x74\x42\x8f\x02\x71\x83\x93\x3b\x90\x42\x52\x2c\x28\x16\x7d\xfd\xcd\xa1\x36\x38\xb9\xe5\x02\xe9\x17\xdb\x4e\x93\x3c\x72\x69\x91\x6a\x3a\x79\x74\x66\x91\x4a\x3a\x51\x0c\xd4\x89\x5b\xf8\x27\x00\x00\xff\xff\x7d\x6d\x47\x49\x00\x30\x00\x00")

func scriptsTerm_posixPiscSwpBytes() ([]byte, error) {
	return bindataRead(
		_scriptsTerm_posixPiscSwp,
		"scripts/.term_posix.pisc.swp",
	)
}

func scriptsTerm_posixPiscSwp() (*asset, error) {
	bytes, err := scriptsTerm_posixPiscSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/.term_posix.pisc.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1506676387, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsBackstoryTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x92\x51\x6e\xdc\x30\x0c\x44\xaf\x32\x07\xd8\x2c\xd0\x8f\x1e\x21\x1f\xfd\x28\x10\xa0\xb9\x00\x2d\x8f\x2d\x62\x65\x49\x15\xe9\x75\x7c\xfb\x42\xca\x6e\x1b\xf4\xd3\x30\xc5\x79\x9c\x99\xd7\x8f\x9a\x4a\x63\x33\x48\x23\x78\x67\x46\x2e\x07\x36\xa9\x55\xf3\x8a\xb2\x3b\x3c\x12\x77\x69\x5a\x76\x43\x92\x4c\x43\x59\x60\x49\xab\x55\x09\xbc\xe2\x67\x31\x47\x65\xa9\x89\x30\x72\x83\x17\x4c\x44\x28\xd9\x99\xbd\x7f\x99\xcb\x89\x92\xc7\xa6\xda\x57\x78\x5f\xe1\x91\xda\x30\x69\xf3\x78\x81\x18\xa6\xe2\x11\xb6\x4f\x63\x2d\x24\xcf\xff\x44\x06\x9c\x37\x4a\x88\x6c\x9d\xa3\x26\x09\xb4\x2b\xde\xb4\x89\xd3\x2e\x58\x1a\x75\x8d\xce\x66\x97\xcf\xa7\xdb\xbe\xae\x69\xdc\x95\xf4\x46\xdc\x95\x58\x4a\xc3\x22\xee\x34\xbf\xe0\xf7\xae\xe1\x46\x73\x4c\x7b\xb8\x5d\xf1\x36\xb0\xa4\x9d\x58\x12\xe9\x86\xad\x98\xa7\x13\xb5\x15\x67\xf0\x07\x6c\x2c\x5b\x57\x7d\x8f\x6c\xc4\x6e\x9c\x1f\xb7\x0a\xec\x34\xe7\xf6\x72\xa8\x11\xdc\xaa\xb6\xce\x5c\xf6\x3c\xe3\x57\x49\x17\x4c\xbb\x23\x95\x55\xcd\x35\x18\x36\xb9\xd1\x20\x58\x25\xc9\xc7\xf9\x72\xe8\x4c\x94\x4c\x64\x4a\x7b\xd1\xad\x16\x33\x9d\x12\xaf\x78\xed\x79\xe8\x32\x06\x83\x6b\x40\xdb\x13\x71\x88\xe1\x39\x73\x19\xa6\x52\x5a\x3a\xbf\xd8\xa5\xd9\x5c\x26\x4d\xea\x4a\x83\xd5\x46\x99\x9f\x11\x2d\xd2\x86\x43\x43\xd5\x63\x2b\xfb\x1a\x7b\xcc\x8f\x34\xdf\xa3\x1a\x16\x09\xbe\xb7\x7e\x5e\x24\xac\x04\xa5\x9f\x48\x5c\x1c\x13\xa3\xe6\xf9\x8a\x1f\x3d\xd8\x72\xc3\xcc\x20\x33\x6d\x78\x2b\x5f\x08\xe6\xa6\x77\x3e\xdc\xe9\x2c\x89\x60\xee\x52\x63\x72\x2b\xbd\x6c\x1f\x95\x4d\x37\x66\x97\xd4\xcd\x1c\x4b\xfb\x6d\x25\xa7\x13\x87\x7a\x1c\xf2\xb2\xf6\x22\x76\xe2\x99\xe2\xf1\xb3\x39\xc5\x88\x23\x96\x3e\x95\x69\xf6\x24\xfd\x2b\xbf\xb4\x71\x41\x7f\xe9\x51\xfc\xbf\xbf\x41\xb6\x27\x9b\x84\xc0\xea\x9c\x7b\x01\x05\x1b\x25\x8f\x7a\x7b\x93\x3b\xd3\x48\x1a\x49\xcc\xf1\xed\x3b\x4e\x4a\x33\x44\xb9\x13\x16\xcb\x91\x71\x94\x3c\x8f\x36\x7a\xd4\xbc\xda\xf5\x4f\x00\x00\x00\xff\xff\x94\x12\x47\x4d\x4c\x03\x00\x00")

func scriptsBackstoryTxtBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBackstoryTxt,
		"scripts/backstory.txt",
	)
}

func scriptsBackstoryTxt() (*asset, error) {
	bytes, err := scriptsBackstoryTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/backstory.txt", size: 844, mode: os.FileMode(436), modTime: time.Unix(1504845781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsGamesavePisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func scriptsGamesavePiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGamesavePisc,
		"scripts/gamesave.pisc",
	)
}

func scriptsGamesavePisc() (*asset, error) {
	bytes, err := scriptsGamesavePiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/gamesave.pisc", size: 0, mode: os.FileMode(436), modTime: time.Unix(1504845781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsIntroPisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\x4f\x6b\xeb\x46\x10\x3f\x5b\xa0\xef\xf0\xc3\x04\x92\x80\xec\xfa\xd2\x8b\x7b\x08\xa5\x10\x28\xf4\x96\x40\x09\xc6\x87\xb1\x34\xd2\x0e\x5e\xcf\xaa\xbb\x23\x29\xfa\xf6\x65\xa5\x98\x17\x1e\x3c\x74\xd2\xce\xec\xfc\xfe\xcd\x96\xc5\x11\xa2\x16\x03\x9e\xd0\xd1\x8d\xb1\xdb\x41\xf9\xd3\xf0\x5c\x16\xc7\x7c\x50\x16\x7f\xfd\xf3\x56\x16\x65\xb1\x7d\xeb\xa9\xe6\x0a\xe6\x18\xaf\xa2\xe4\xf1\x1a\x83\x9a\x70\xcc\xd5\x77\xc7\x48\x46\x31\xc1\xd1\xc8\xb8\x70\x7d\x0d\xca\x0d\xe6\x30\x54\xe0\x91\x15\x93\x63\xcd\xbf\x98\x38\x32\x2e\x83\x81\x30\x31\xa3\x76\xe2\x9b\x7d\x59\xfc\x6d\x8f\x09\x84\x28\xe9\x3a\xc3\x4b\xcb\x15\x52\x46\x6c\x29\x8a\x76\x15\x26\x47\x86\x49\xcc\xa1\x97\x48\xc6\xa9\x42\xba\x0d\x5d\xe7\x39\xa6\x0a\xa4\x0d\x7a\x4f\xca\x46\x71\x46\x1f\xbc\xd4\x5c\x16\xa2\x20\xd4\x41\x93\x91\x1a\x92\xc5\xa5\xbf\x82\x06\x83\x05\xdc\x58\x4d\x82\x82\x92\x71\x94\xd0\xa4\x0a\x4a\xa3\x74\xb4\x9c\x36\xd2\xb6\x52\x0f\xde\xe6\x75\x7c\x16\x3e\x98\x65\xbd\x63\x90\x06\xa1\x5d\x09\xee\xf1\x11\x86\xc7\x91\xd1\x47\xee\x29\x72\x83\x36\x44\x98\x93\x84\x86\xe6\xa5\x1a\x11\x99\x1a\xd1\x0e\x26\x37\xc6\x44\x09\x0d\x37\x52\x93\x71\x93\x89\xd4\x8e\xa2\xa5\xb2\xc8\x30\xc9\x49\x8f\xd0\x73\x5c\x58\x54\xd9\xb2\x98\x81\x22\xaf\x97\x2d\xc0\x22\x89\xe6\x69\xa2\x48\x72\x1b\x3c\x59\xb8\x9b\xb0\xb6\xd3\x28\xda\xa5\xb2\x58\xc2\xa0\x5b\x18\xf4\x0b\xe9\xe1\xf7\xc3\xe1\xb0\xc7\xbf\xe2\xfd\x12\x06\x7f\xf6\x3e\xe4\xd1\xf7\xfc\x5e\xf0\xf4\xf1\x9b\x3e\x97\xc5\x16\x7d\x14\x35\xaf\x39\xde\x03\x8e\x57\x9c\xf0\x70\x85\xa4\xdd\xac\x2f\x8b\x83\x67\x9c\xd0\xb1\x5d\x79\xce\xd5\x33\x26\x27\x9e\x73\xf7\xda\xa6\x2f\x38\xa1\x2c\x36\xdb\x77\x17\x86\xce\x55\xe8\x39\x3a\xea\xd3\x0f\x2c\x64\x51\xd9\x2c\xd2\x60\x8e\xe3\x22\x70\x8f\x3f\x5b\xe3\x08\xf2\x7e\x59\xb6\x19\x53\xd0\x47\xc3\x85\xd1\x85\x2c\x9a\x74\x9e\x1c\x47\xfe\x46\x70\x33\x91\xd8\x8e\x75\x09\x67\xb3\x39\x65\xff\xb2\x41\xbb\x1b\xeb\x80\x33\xca\xe2\xbc\xec\xdf\x9d\xda\x9c\xa9\x9d\xd0\x4b\x7d\xdd\x2d\x7e\x9f\x71\x6f\xf8\x23\x0b\x38\x7e\x2b\xfd\xfc\x2e\xb2\xa4\xe5\x49\x6c\xb6\x4b\xf0\xf1\xce\xcb\x02\x94\xb9\x01\xad\x11\x5e\xb8\xcd\xc6\x66\x93\x6b\xd2\x9c\xd9\xc8\x1e\xe6\x62\x36\x63\xdd\x9c\x0a\x2e\x4c\x3c\x72\xdc\xe3\x97\x62\x4e\xf8\x6f\x10\xdb\x2d\x1c\xce\x5f\xf4\xd6\xef\xff\x00\x00\x00\xff\xff\x8f\x37\x15\x2f\xbb\x03\x00\x00")

func scriptsIntroPiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsIntroPisc,
		"scripts/intro.pisc",
	)
}

func scriptsIntroPisc() (*asset, error) {
	bytes, err := scriptsIntroPiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/intro.pisc", size: 955, mode: os.FileMode(436), modTime: time.Unix(1504845781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsLibPisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe2\xe5\x2a\x49\x2d\xca\xd5\xcd\xcd\x4f\x49\x55\x50\x0a\xf7\xf4\x73\xf1\x0f\x0f\x56\x52\x48\x2d\x54\x88\x56\xe0\xe5\x52\x50\x50\x50\x50\x2a\x4e\x2e\xca\x2c\x28\x29\x8e\x89\x01\x29\x8c\x2f\xcf\xcc\xd3\x2b\xc8\x2c\x4e\x56\x52\x48\x4f\xcc\x4d\xd5\x85\x48\xf2\x72\xc5\x2a\x94\x67\xa4\xe6\xf1\x72\xa1\x18\x17\xe0\x1f\xec\x19\x81\xcf\xb0\x82\xfc\xe2\xcc\x0a\xfc\xc6\x01\x02\x00\x00\xff\xff\xa7\x54\xa2\xfb\xa0\x00\x00\x00")

func scriptsLibPiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsLibPisc,
		"scripts/lib.pisc",
	)
}

func scriptsLibPisc() (*asset, error) {
	bytes, err := scriptsLibPiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/lib.pisc", size: 160, mode: os.FileMode(436), modTime: time.Unix(1506675725, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsMainPisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x93\x5b\x4f\xc3\x36\x14\xc7\x9f\x13\x29\xdf\xe1\xaf\xac\x0f\x80\x9a\xb2\xdb\x53\x40\x4c\x53\x29\x1b\x52\x69\xa5\x01\x4f\xa5\x0f\x8e\x73\xda\x58\x75\xec\xcc\x76\x29\x15\x42\xfb\xea\x93\x9d\xf4\x02\x03\xf6\xd2\x3a\xc7\xbf\xf3\x3f\x57\xff\x80\x87\x4a\x58\x08\x8b\x85\x50\x4c\x62\x61\xb4\x72\x82\x4c\x1f\x0c\x4b\x56\x13\x84\xb2\x8d\x30\x54\x72\x14\x5b\xd8\x86\x71\xea\xc3\x19\x56\xd2\x46\xa8\xd2\xf6\xc1\x54\x09\x06\x29\x9c\x93\x84\x42\x38\xe8\x05\x24\x53\x94\x15\xcc\x52\x09\xae\xeb\x82\xb9\x24\x3e\x3f\x4b\xe2\xdb\xeb\xd1\xef\xf7\x39\xee\xd8\xb6\x20\x1f\xae\x84\xd5\x35\x61\xc3\xb6\x70\x1a\x42\x39\x5a\x1a\xe6\x08\x52\xab\x25\x9c\xa8\xc9\x07\x7a\x26\xe9\xaf\x34\x5c\x45\xe0\x6b\xe9\xd6\x86\x7c\x8c\x90\xca\x82\x19\x32\x36\x89\xcf\xce\x93\x38\x89\x53\xcb\x8d\x68\x9c\x7d\x7a\x92\xa2\x18\x34\xc2\xf2\x34\xd4\x90\xb5\xf6\x63\xa0\x66\x66\x45\xce\x7e\x0f\x09\xe5\x8c\xfe\x0c\x49\xe2\x1c\xba\x21\x25\xd4\x32\xab\x49\xad\x71\xd2\xf6\x2a\xcb\xa0\xe8\xc5\xe1\x34\x89\xa3\xdc\x5b\x92\x38\xfa\x15\x97\xeb\x26\x2b\xf5\x46\x05\xf4\x0a\x79\x9d\xc4\x51\xaf\x46\x76\x55\x89\x65\x25\xc5\xb2\x72\xc8\xef\x46\x93\xc7\x24\x46\x34\x43\xc1\xf8\x2a\x2b\x24\xe3\x2b\xcc\x91\x0f\xff\x9c\xde\x0e\x47\xfe\xa6\x3d\xa1\x31\x42\x85\x0c\x3c\xdb\xab\x31\x28\xb5\xa2\xdf\x30\x0f\x86\x24\x8e\xa2\xe1\xf8\xde\xff\x4d\x26\x63\xff\xd7\x7b\xf5\xbf\x11\xdf\x32\x85\xf4\x26\x4c\xf8\xa6\x9b\x70\x8a\x8e\x89\x0c\x95\x08\x87\x14\x48\xf1\x23\x7c\x32\x48\x27\xb4\xc1\x1f\xac\xa6\x14\x5d\xe8\x1d\x1e\xa8\x9f\x3a\x6a\xac\x59\xf9\x0d\xf6\x73\x87\x4d\x1b\x27\xb4\xb2\x9f\x43\xbf\x74\xd0\x5f\xe4\xd6\x46\xf9\x5d\x30\xc4\x24\xa4\x58\xfc\x57\x75\x53\x09\x47\x48\x1f\x9b\xf3\x6b\xbd\x09\x2c\xaf\xb4\xb6\xd4\xc7\x48\x39\x32\xc1\xa0\xd5\x42\x98\x1a\xa9\x77\x78\x3b\x74\x2c\xf2\x5d\x1f\x34\x46\xf3\x6c\x45\xdb\x24\x8e\xe6\xd8\x54\x42\xfa\x21\xbd\x86\xfa\x31\x43\x18\x39\xe6\xbb\x4f\xa9\x59\x99\x85\xd1\xce\x3b\x8b\x6e\x0b\xd9\x7f\xd3\x8b\x70\x07\xe2\x2d\x8c\x84\x57\xda\x92\xca\x44\xf9\x82\x67\xe2\x19\x73\x48\xe2\x8b\x76\x6b\x0e\x82\x87\x95\xc1\x29\xc2\xb2\x60\x38\xbe\x47\xfa\x30\xbd\x9e\xe6\xb8\xad\x1b\x49\x35\x29\xd7\x2e\x9e\x77\xb3\x69\x5b\x8a\x54\x98\x21\x45\x8a\x01\xe6\xb8\xf0\xa2\x96\x3d\xd3\x47\xd1\xff\xd7\xf4\x5e\x5f\x6b\xee\xea\x3c\xf9\x20\xf6\xcf\xe7\x6a\x7b\xfe\x4b\xc1\x43\xa3\x8e\x93\x3c\xa4\xfe\xf7\x7a\x77\xdf\xb5\xaa\x66\x42\x75\xe1\x93\x18\x00\x2e\x4b\xc1\xdd\xd5\xfb\x87\x97\xf3\xb5\x31\x99\x75\xcc\xd1\x3b\xa8\x7b\x7d\xde\x32\x83\xc3\x1c\x33\xf4\x82\x78\xef\xe0\x00\xce\xa4\x3c\x56\xc0\x7e\x21\xbc\xdf\x92\x5c\x58\x13\x7f\x3e\x7a\x94\xbb\xf2\x7c\x63\xdb\xcb\x7d\xe6\xdd\x94\x7d\xe2\x49\xfc\x6f\x00\x00\x00\xff\xff\x76\x7f\xc3\x61\x59\x05\x00\x00")

func scriptsMainPiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMainPisc,
		"scripts/main.pisc",
	)
}

func scriptsMainPisc() (*asset, error) {
	bytes, err := scriptsMainPiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/main.pisc", size: 1369, mode: os.FileMode(436), modTime: time.Unix(1506675817, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsMapPisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x5f\x8b\x13\x31\x14\xc5\x9f\x33\x90\xef\x70\xa8\x03\xae\x8b\xb1\xfa\x9a\x95\xfa\x50\x16\x14\xd6\x0a\xca\xe2\x43\xe9\x43\x9a\x5c\x9b\xb0\xf9\x33\x24\xa9\xb3\x20\x7e\x77\x49\xa6\xe2\x22\xfb\x30\x19\x72\xcf\xb9\xe7\xde\xfc\xd6\xd7\x7c\xe0\xc3\x57\x8a\x86\x32\x14\x4e\xca\xab\xea\x34\x82\x9a\xf0\x23\xa7\x00\x4b\x99\x9a\xe3\x7a\xdd\x4e\x89\x52\x55\x16\x4d\xbd\xc2\x49\x05\x82\x10\x88\xf4\x58\xf1\x0a\x7c\x60\x7c\xb8\x69\xae\xee\xb3\x69\x16\x73\xca\xde\xe0\x0a\x93\x57\x91\xea\x33\x0d\xb2\x97\xe4\xa2\xb7\x46\x36\x5e\xbc\x62\x63\xa8\xe8\xec\xa6\xea\x52\xc4\x94\x5d\xac\x3e\xfe\xe7\xf0\x49\xab\x26\x17\x98\xf3\xd4\xbf\x3d\xc4\x26\xb6\xc8\x03\x7e\x92\xee\x7b\x4a\x9f\x74\xe9\x82\x4e\x21\xa8\x68\x9e\x6a\xda\x26\xa7\xa9\xb4\xd4\x6e\xf3\x14\xf1\x0e\x02\xef\xcf\x93\x30\x69\x8e\x22\x50\x3c\x6f\x20\xc3\x32\x39\x40\x6c\xac\x3b\x59\xef\x4e\xb6\x42\x7e\xbe\xdd\xdd\xf3\x01\x6c\x8f\xa3\xd2\x0f\xe2\xe8\x95\x7e\xc0\x01\x72\xfb\xf1\xcb\xa7\xed\xed\x42\x82\xed\x31\x06\xbc\x31\x29\xd2\x07\x1c\xf8\xc0\x5e\xe0\x3b\xbd\xcc\x84\x4c\xe2\x78\x76\xde\xb8\x78\x42\xb5\x84\x36\x09\xa4\xb4\x45\x75\x81\x30\xbb\x6a\xa1\x90\xa9\x54\xd4\x84\xd1\xf5\x28\x3e\x30\xb6\xbd\xfb\xd6\x7f\x7d\xc8\x3f\x32\x8c\xbd\x85\x6c\x2e\x36\xfe\x6a\xe7\x13\x4e\x9d\xc8\x6e\x77\xd7\xcb\x99\xcc\x22\x5f\xb8\x48\xdf\xaf\x6c\x74\x68\xef\xc1\x0a\x58\x61\xf4\xb8\xe4\xff\x6d\x5b\xa0\xb5\xfd\xfa\x75\xb6\xae\x12\x56\xf7\xd3\xba\x61\x6a\x1b\x16\xf2\xa4\xeb\x6b\x50\xac\x94\x5b\x41\xdb\x94\x0a\xad\xb0\x04\xfc\xe6\x03\x3b\x60\xb6\xce\xd3\xc2\xf2\x82\xbe\xd3\xd1\x36\x15\x8a\xc2\x99\xc7\x3e\x45\x55\x3e\xdc\xe0\x4f\x00\x00\x00\xff\xff\xb8\x77\xfd\xe3\x9a\x02\x00\x00")

func scriptsMapPiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMapPisc,
		"scripts/map.pisc",
	)
}

func scriptsMapPisc() (*asset, error) {
	bytes, err := scriptsMapPiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/map.pisc", size: 666, mode: os.FileMode(436), modTime: time.Unix(1504845781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsMarketsPisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x31\x6f\xdb\x4e\x0c\xc5\xf7\x03\xee\x3b\x10\xf0\x92\x04\x7f\xc3\x7b\xfe\x43\x01\x2b\x71\x9a\xc1\x68\x50\x17\xcd\x4c\x9f\x18\x1d\x91\xd3\x51\xe0\xf1\xec\xfa\xdb\x17\x27\xbb\x70\x81\x74\xc8\xc2\x41\xd4\xfb\xbd\x27\x3e\x2d\xc0\x3b\xef\x56\x77\x6d\xbe\x46\x34\xe0\x02\x16\x09\x28\x48\x96\xf1\x04\x83\x70\x1e\xc0\x04\xf6\x04\x89\xdf\x09\x38\x83\x45\x2e\x30\xe0\x48\x5f\x9a\x6a\xb1\x80\x35\x16\x0e\xf0\x24\xd2\x97\x99\x83\x46\xea\xdd\x46\xa4\xf7\x6e\x53\x29\x79\xf7\x4d\x69\xb5\x0b\x8a\xd3\x45\xf1\x80\x86\xd0\xe1\x54\x6a\xa2\x59\xf3\xa2\x32\x28\x8e\xc5\xbb\x9f\xdc\x93\x14\xef\x9e\x70\x6c\xab\x2d\x4e\x65\xd5\x45\x54\x2b\x17\xed\x57\xc2\xc3\xe9\xea\xf6\x5d\xf6\xd2\x76\xdb\x9a\xd9\x58\x72\xf1\x6e\x5d\x39\xf5\xcb\x4e\xc9\xc8\xbb\xc7\x7c\x60\x95\x65\x89\x4c\xa9\xe7\x3c\x5c\x28\x1b\xc5\x81\x13\x5d\x39\x3b\x49\xa8\xf0\x82\x99\x52\xf1\xae\x93\x71\xaa\x46\x0a\x5d\xe4\xa9\x78\xf7\x20\xa1\x8e\x94\x9b\xd1\x2e\xd4\x34\x59\xd5\x73\xf0\xbb\x55\x9b\xf7\x50\xa2\x1c\x97\x23\xea\x3b\x19\xdc\xc0\x72\x09\xb7\xf0\xff\x9f\xd3\xbe\x8a\xa6\x1e\x50\x43\x24\x3b\x4d\x67\x5d\x27\x49\xf2\xe9\xde\xbb\xc7\x5f\x93\xa8\x15\xd8\xcf\x47\x1c\x5a\x9c\xff\xe0\xc8\x16\x01\x41\x31\xf7\x32\x42\x88\x98\x03\x81\xbc\x01\xcd\x2f\xb7\x4a\x24\x13\x88\x45\x52\x68\xc8\xb6\x6b\x52\x40\x03\x84\x24\x47\x98\x94\x03\x35\xa3\xad\x64\x2c\xc6\x01\x7e\x50\x88\x59\x82\x62\x68\xb6\xcf\xe3\x3f\x6c\xe9\x92\xa5\x6f\xf5\x84\x4b\x3d\x8d\x7d\x40\x65\xa9\x05\xfe\x8a\xaf\x93\x28\x1a\x17\x83\xe7\xdc\xd7\x62\x9f\x23\xc7\xb9\xbc\xf9\xe1\xfc\xe7\x75\x4a\x67\xc8\x06\xf7\xca\x9f\x84\x7c\xe8\x6e\x4d\x55\x9b\xb4\x7d\xe6\x96\x4c\x3f\x60\xe8\x40\x7a\xb2\xc8\x79\xb8\x52\x26\x39\x92\xae\x38\xbf\xa5\x4a\xed\xbc\x37\x91\xe2\xed\xb9\xd2\xdf\x01\x00\x00\xff\xff\x8c\x0c\x77\x50\x16\x03\x00\x00")

func scriptsMarketsPiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMarketsPisc,
		"scripts/markets.pisc",
	)
}

func scriptsMarketsPisc() (*asset, error) {
	bytes, err := scriptsMarketsPiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/markets.pisc", size: 790, mode: os.FileMode(436), modTime: time.Unix(1504845781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsShipsPisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xdc\x36\x10\x3d\x5b\x80\xfe\xc3\x03\x12\xa0\xb6\xb1\x6b\xc7\x75\x4f\xea\x22\x45\xea\x24\x68\x80\xe4\xd2\x04\xc8\xa1\xe8\x61\x24\x8e\x24\x76\x25\x52\xe5\x50\xbb\x56\x8b\xfe\xf7\x62\x48\x6d\xec\x24\x6d\x81\xc2\x30\x56\x22\xe7\xe3\x71\xe6\xcd\xa3\x9e\xe0\x63\x4f\x11\x56\x10\x7b\xc6\xe8\x0d\x0f\x68\x7d\x80\xf4\x76\x12\x74\xde\xba\x0e\xd1\xa3\xe6\x1f\xca\xa2\x2c\x9e\xe0\x2d\x39\x46\x5c\x26\x16\x34\xe4\x50\x33\x6e\xe0\xdb\xe4\xfc\x1d\x46\xfa\xcd\x87\xbc\x9b\xad\x9f\x61\x8b\x1f\x49\x6c\x53\xe1\x8e\x1c\x1a\x0a\x61\x41\xad\x0b\xfa\xdc\x79\xb5\xb9\xc1\x16\x2f\x29\xd2\x63\x13\x43\x91\x34\xec\x81\x82\xf5\xb3\x60\x6f\x9d\x91\x8d\xa2\x0c\x64\x2c\x45\xeb\x9d\x22\xe4\xc1\xb0\xb9\xc2\x0b\x34\xbe\xd9\x4f\x36\xa2\x27\xc1\x4d\xf6\x96\xc1\x47\xd4\x0b\x0c\xb7\x34\x0f\x51\x33\x7d\x8b\x2d\x7e\x62\x3a\x2c\xff\x82\x66\x03\x1f\xd0\x33\x1d\x2c\x07\x74\xde\x1b\x81\xba\xdd\x62\x8b\xd7\x81\x3a\x3b\x70\x85\x37\x82\x7a\xb6\x43\xc4\xd1\xc6\x1e\xd2\xfb\x66\x0f\xaa\xc5\x87\x5a\x14\x54\xf4\xa0\x61\xf0\x47\xc4\x40\x4e\x26\x1f\xa2\x1e\xa3\xcd\xde\x39\xa6\x56\xa6\xc2\x6e\x20\xc7\xcf\x71\x0e\xb1\x7f\xe4\x82\x62\xbb\x85\x2e\xe2\x02\x65\x71\x56\xa5\xa5\x4a\x77\xcb\xe2\xec\x4f\x3c\x4d\x76\xbf\xa0\xc5\xaf\x88\x76\x64\xc1\x5f\xa8\xd6\x1a\x9e\xed\x8c\x6d\xe2\xf3\xb2\x38\x3b\x7b\x9a\x96\xb0\xdb\x6d\x4f\x7b\x67\x4f\x53\xa4\xdd\x6e\xab\xbf\x65\xf1\xfd\x9a\x5f\x1b\xac\xf9\x1d\x8d\x9c\xf2\x8a\x02\xd0\xd5\x15\x40\x5e\xab\x74\xff\xf3\x14\x79\x63\xb7\xdb\xa6\x87\xb4\x94\x82\xec\x76\xdb\x6c\x9c\x52\x5c\x5f\x96\xc5\x2b\x6a\xfa\x1c\xd2\x9e\xca\xe6\xe7\x54\x91\xd5\xf5\xc1\x40\x3b\x47\x30\xc1\x3b\xc6\xe0\xc9\xa8\x5d\xe3\x5d\x0c\x7e\x18\xd8\x68\x23\x95\x62\x77\xb9\xcf\x65\xf1\x26\x53\xee\xd4\x77\x2b\x30\x2c\x31\xf8\x85\xcd\x06\x8b\x9f\xd1\x29\x22\x2b\xf0\x07\x0e\x57\x28\x8b\x77\x5e\xe2\x4a\x6a\xe3\xdd\x37\x11\x31\x2c\xda\xad\xd5\x0d\xf4\xc0\x21\x7f\xe4\x03\x87\x0d\xca\x62\x0a\xdc\x72\x08\xeb\x0c\x0c\x4c\x07\x4e\xc1\x7b\x1e\xa6\x81\x45\x94\x2f\x0d\x4d\x71\x0e\x69\xfd\x4a\xcf\xfd\x3e\xe5\xd0\xd9\xe8\xd5\xfc\xe6\xfe\x56\x7d\x6f\xef\x6f\x9e\xc1\x3a\x18\x3b\xb2\x53\xfa\xca\x06\xe4\x0c\x5a\x9b\x8e\x97\xc8\x64\x6c\xdb\x72\x60\x17\x21\xdc\xa9\x59\xa2\xca\xdb\x54\x6d\x8d\xd7\x78\x3d\x92\xc3\x6d\xe2\x8c\x80\x04\x47\x1e\x86\x0d\xde\x8f\xa4\x3f\xef\xd8\xd8\x31\x45\x7d\x4b\xa1\xe3\x04\x26\x07\x5a\x07\xf6\xfc\x12\xd6\x19\xdb\x50\x64\x8c\xe4\x0c\x45\x1f\x96\x53\xb2\x8b\x0a\x29\x9d\x6d\x79\x2b\xf3\xa4\xd4\xbd\x5e\xcb\x7d\xa9\xb5\x78\xe5\x3a\xeb\x58\x2e\x37\x65\xf1\x7a\xe6\x01\x1f\xc8\xed\x2f\xcb\x22\xf3\x6d\xf2\xa6\x2c\xee\x02\x1f\xf1\xfb\x4c\x21\x72\xc0\xf9\x0d\x1a\x7d\x1f\x79\xac\x39\x60\xe2\x00\xe1\x46\x4f\x7e\x51\x16\xb9\xcd\x93\x37\x6a\xb6\xbe\x7c\x66\x50\x16\x1f\x7a\x0e\x0c\xd2\xff\x41\x34\x81\x88\xad\x07\x86\xf3\x6e\x2b\x51\xc1\x07\xf3\xa9\x4e\x55\x42\xee\x5d\x87\x40\xae\x63\x08\x3b\xf1\x41\x70\x0e\xbe\x8f\x41\x5b\x3b\xd6\x14\x11\xfc\xec\x0c\x2e\xca\xe2\x4e\x89\x45\xb5\x96\x2a\x81\x40\x4b\x01\x35\x47\x05\xde\xf4\xe4\x1a\x56\x8e\x4e\x24\xa2\xad\x27\x07\xeb\x64\xca\xe0\xd4\x5d\x5b\x0c\x69\xc8\x39\x3d\x68\x9a\x77\x49\xbc\x88\x1e\xc2\xda\x23\x7d\x48\x46\x2b\xc0\x8b\xb2\xf8\xe0\x8f\x98\xa8\xd9\x53\xc7\x5f\xfa\xf4\x34\x0f\x99\x9b\xd7\x31\x90\x1d\x38\x08\x28\x81\xbd\x78\xd4\x44\xc9\x84\x3a\x50\x58\x14\xd5\xc0\x07\x1e\x44\x71\x52\x18\x7d\xa8\xca\x62\xf0\xc7\x2c\x6c\x35\xa3\x0e\x4c\x4d\x9f\x07\x87\xdc\x02\x8a\xb1\xd9\x97\xc5\xc8\xc6\xce\x63\x85\x8f\x76\x18\x12\xe9\x52\x29\x41\x18\xad\xb3\xe3\x3c\x6a\xb8\x1b\xc8\xdc\x34\x2c\xd2\xce\x83\xfa\x51\xb3\xbf\x2a\x8b\x3e\xeb\xe6\x7f\x39\xde\x7e\xed\x28\x69\x24\x5e\x6a\x87\xe5\x11\x7f\xb3\xe6\x26\x52\xa6\xd6\xbd\x48\xc6\x15\xde\xf7\xde\x47\x81\xc4\xb9\x6d\xcb\xe2\x25\xb7\xec\x1a\xae\x90\x1e\x8c\x80\x3a\xb2\x4e\xe2\x1a\x3b\x13\x47\x36\xe0\x2c\x22\x3e\x6a\xef\x42\xc7\x82\x79\x52\x64\xdc\xd1\xb6\x66\x1a\xcb\xe2\x8d\x77\x95\x5a\x84\x28\x5b\x15\x96\xec\xa9\xa3\x72\xed\x3f\xd1\x2e\x4d\xdb\x0b\x73\xd0\xf6\x9b\xd5\xa4\xc2\xcf\x64\x0d\x07\xdd\xca\x4f\x27\x5f\xe3\x41\xe9\x7a\xe2\xb8\xe4\x0b\xd0\xba\x4e\x36\x30\x3c\xb1\x33\xda\x20\xef\x70\xec\x6d\xd3\x67\x71\xf7\xed\x89\x0c\x2a\x5c\x8b\xce\x9f\x32\x41\xbb\xaf\x7a\x76\x52\xb4\x45\x5f\xf1\xd9\x10\xae\xba\xb4\xc9\xdb\x91\xf6\x9c\x44\x2d\xe9\x9f\x92\x46\x87\x33\x27\x5a\x59\x65\x63\xbe\xb1\x21\x03\x1d\xd8\xe8\xcb\xe2\xe7\x20\xe9\x5e\x7f\xb8\x97\x56\x8e\x2e\x14\xf2\x9d\xf4\x18\x00\x81\xd3\xb8\xeb\x78\xa4\xc4\xf0\xd3\xe4\xd3\x34\x24\x5e\x1f\x95\x06\x29\x83\x3f\x6a\xb1\xfc\xd1\x7d\x1d\x22\xc9\x44\x24\xb7\xdf\x28\xb2\x14\xa5\xd5\x25\xeb\x10\xf5\x9b\x43\xb7\xd2\x87\x87\x42\x52\xe5\xfb\x04\x35\x27\x71\x7c\x1f\x11\xe7\xf0\x0f\xa1\xb3\xea\xd4\xb4\x64\x70\xf9\xf5\x14\xb7\xa6\xe5\x21\x2c\xfd\xaf\xb0\x81\x8f\xdb\x55\xc1\xd6\xc8\x8f\x34\xec\x14\xff\x24\x71\x56\xc0\x36\xf6\x1c\xa0\x32\x98\x6e\x01\xa3\x37\xc2\x3e\x69\xfa\x17\x54\xb0\x6d\xbe\x39\x74\x84\x65\xa2\x26\xb5\x3e\x7f\x81\xc4\x9e\x47\xf5\x73\x3e\xa6\x71\xf9\xfa\xef\xef\x00\x00\x00\xff\xff\x2f\xdf\x8e\xdf\xa5\x09\x00\x00")

func scriptsShipsPiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsShipsPisc,
		"scripts/ships.pisc",
	)
}

func scriptsShipsPisc() (*asset, error) {
	bytes, err := scriptsShipsPiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/ships.pisc", size: 2469, mode: os.FileMode(436), modTime: time.Unix(1504845781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsTerm_posixPisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x94\xc1\x6f\xe2\x38\x14\xc6\xcf\xf1\x5f\xf1\x29\xe5\x00\xaa\x2c\x01\x4d\xdb\xdd\x40\xdb\x43\xb5\xab\xd5\x0a\xf5\xd2\x63\xca\x21\x38\x2e\x78\x92\xd8\xc8\x49\x86\x41\xa3\xf9\xdf\x47\xb6\x03\x49\x6a\x18\x09\x09\x3f\x7f\x3f\xbf\xf7\xfc\xbd\x24\x31\x98\x2a\x94\xa6\x4c\x65\x1c\x63\xd8\x3f\x4a\xdb\x4d\x5e\x31\x4c\x10\xdb\xcd\xd1\x4f\xfc\xf3\xfe\x8a\x30\x09\x31\xb2\x1b\x61\x19\xe2\x17\x16\xe4\x06\xaf\x05\x4f\x35\x2a\xa6\x39\x97\x48\x65\x86\x52\x7d\xe7\x60\x8d\x56\x1a\xb5\x42\xad\xf6\xb4\xe0\x9f\x35\x89\xf1\xba\x7a\xc7\xd8\xe4\x9f\x74\xf9\xe6\xff\x87\xed\x6a\xf1\x9f\xc9\xb8\xd7\x42\xd6\x58\x90\x18\x6f\x2b\x07\xbf\xad\x30\x41\xf8\xa1\x3f\x64\xe8\xf6\x07\xc2\xdb\xca\xfc\x16\x84\xdc\xe0\x5f\xa5\x39\xb5\xad\x57\x24\xc6\xa6\x48\x59\xee\x40\x5e\x31\xea\xc2\x09\xc2\xbb\x69\xd8\xbf\xb4\xc9\xa8\x79\xd6\x81\x26\x30\xd8\xcc\xc3\xb6\xf6\x86\x67\xd0\x85\x06\x9d\x7b\xe8\x91\x17\x85\x3a\x74\x6c\x1b\x1b\xf8\xce\x83\x37\x45\xc3\xfb\x8d\x36\xdc\x82\x91\x07\x96\xe9\x96\xcb\x3a\xed\xd8\xd3\x86\xc1\xef\x3d\x9c\x1d\xd3\x5e\xbb\x36\x32\xe0\x83\x07\x1e\x76\xa2\xee\x75\xe0\x42\x83\x3e\x7e\x41\xc9\x0d\x36\x29\xcb\x7b\x26\x9b\xe8\x9a\xd3\x91\xef\xb4\xe5\x2f\xd9\x1d\xf9\x76\x5b\xf6\x9a\xe7\x91\xef\xb9\xe5\xaf\x1b\x1f\x5d\x30\xde\x75\x7f\xc9\xfd\xc8\x77\xdf\xd2\x7f\x1a\x41\xe4\x8f\xc0\xb9\x75\x71\x0e\x91\x3f\x07\x4b\x5f\x1b\x46\xe4\x0d\x23\x86\xa8\x28\x97\x35\xd7\x2f\x18\x23\x37\x27\x5e\x30\xc1\xec\x0e\x4f\x36\x9d\xa8\x68\xaa\xb5\x3a\x0c\xd4\xf9\x23\x9e\x90\x60\xcb\xeb\x9c\x1f\xf1\xf7\x0c\x4f\x58\x23\xc1\x27\xd6\x10\x9f\xe7\xac\xcd\x7e\x70\xe8\xe1\xbe\x4b\x99\xa9\x83\x1c\x8a\x0f\x9d\xa8\xc5\x76\x57\x0f\xd5\xc7\x4e\x35\x9f\x81\xa1\xf8\x97\x15\x9d\x7a\x1c\xde\x62\x3e\xeb\x0e\x0e\x0b\xce\x66\xd3\x4e\x3a\x0e\x35\x24\x6d\xaa\xb5\x5b\x49\xb3\xda\x08\x28\xed\xea\x1c\x52\x51\x3b\xcf\x4e\x5f\x22\x12\x9c\xdd\xe8\xec\x34\xa7\xd7\xe6\xbd\x28\x38\xb1\xe7\x96\xcd\xde\xde\x9c\x96\x5c\x36\xcf\x18\x43\x36\x25\x55\xfb\xba\x32\x49\xd4\xe6\x9b\x4d\x14\xcb\xa6\x24\xc1\x14\x71\x49\x45\xf6\x83\x04\x35\x62\xb6\x53\xaa\x12\x72\x6b\xaa\x90\x20\x68\x0b\xc5\x39\x09\x82\x51\xde\x2b\x68\x26\x70\x86\x6d\x69\x2e\x71\x86\xda\x31\x26\x24\xe8\x52\x64\x42\x9b\x70\x94\x09\x7d\x9a\x58\x02\x4a\x6d\xe9\x36\x41\x5f\x77\x63\x4b\x70\x7b\xeb\x11\x6e\x63\x24\x9b\x12\xa5\xca\xce\xdd\x9f\x95\x29\x96\x48\x9c\x1e\x7f\x39\x7c\x5a\xac\x4d\xf3\x9c\xe5\x24\x58\x66\x82\xd5\xcf\xd6\xd5\x51\xef\x3e\xcb\x25\xcd\x94\xe4\x2f\x76\xff\x94\x64\xb9\xa4\x6c\xa7\x2a\x2e\x5d\xc1\x04\x36\x87\x13\xf6\x5a\x31\x9a\xf3\x63\xef\x80\x79\x6e\x7b\xaf\x48\x6b\x92\xa5\x77\x62\xbb\x2b\xcc\xb3\x47\x16\xe4\x77\x00\x00\x00\xff\xff\xe2\x5b\xe1\xa3\xd4\x06\x00\x00")

func scriptsTerm_posixPiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsTerm_posixPisc,
		"scripts/term_posix.pisc",
	)
}

func scriptsTerm_posixPisc() (*asset, error) {
	bytes, err := scriptsTerm_posixPiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/term_posix.pisc", size: 1748, mode: os.FileMode(436), modTime: time.Unix(1506676368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsTerm_winPisc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x94\x4d\x6f\xa3\x3c\x10\xc7\xcf\xf8\x53\x8c\x68\x0e\x89\x2a\x4b\x79\xa1\x4f\x1f\x51\xda\x1e\xaa\xdd\xc3\x2a\xea\xa5\x47\xda\x03\x31\x6e\xf0\x02\x76\x64\x40\x59\xb4\xda\xef\xbe\xf2\x98\x04\x53\x27\x2b\x55\x2a\x33\xff\xdf\xbc\xf0\x1f\xda\x18\x98\xaa\x94\xa6\x4c\xe5\x1c\xe6\x80\xbf\x28\x1d\x92\xbc\x61\xb0\x80\x18\x93\xb3\xdf\xf0\xed\xed\x05\xc2\x34\x84\x19\x26\xc2\x3a\x84\x3f\xf0\x40\x62\x78\xd9\xbe\xc1\xdc\x54\x2d\x46\x6a\xfd\xc3\xa8\x07\x2d\x64\x8b\xcc\xeb\xd6\x22\xaf\x5b\x58\x40\xf8\xfe\x2e\x43\x9b\x9e\xe4\x5f\xb7\xe6\xe7\x81\x90\x1b\xf8\xae\x34\xa7\xb8\x45\x43\x62\xd8\x55\x19\x2b\x2d\xc8\x1b\x46\x6d\xb8\x80\x70\xb3\x0c\xdd\xfd\x4d\x47\xcd\xf3\x11\x34\x81\xc1\x56\x1e\xb6\xd7\x9c\xcb\x11\xb4\xa1\x41\xd7\x1e\xda\xf3\xaa\x52\xc7\x91\x1d\x62\x03\x6f\x3c\x78\x57\x75\xdc\x5d\xb4\xe3\x08\x46\x1e\x58\x67\x7b\x2e\xdb\x6c\x64\x4f\x09\x83\xdf\x79\x38\xeb\x33\x67\x5d\x8c\x0c\xf8\x9f\x07\x1e\x0b\xd1\x3a\x1b\xd8\xd0\xa0\xf7\x5f\x50\x72\x03\xbb\x8c\x95\x8e\xc9\x26\xba\xe6\x74\xe4\x3b\x8d\xfc\x25\xbb\x23\xdf\x6e\x64\xaf\x79\x1e\xf9\x9e\x23\x7f\xdd\xf8\xe8\x82\xf1\x76\xfb\x4b\xee\x47\xbe\xfb\x48\xff\xeb\x04\x91\x7f\x02\xeb\xd6\xc5\x3b\x44\xfe\x1d\x90\xbe\x76\x8c\xc8\x3b\x46\x0c\xa2\xa1\x5c\xb6\x5c\x3f\xc3\x1c\x4a\x53\xf1\x0c\x0b\x58\x6d\xe0\x11\xdb\x89\x86\x66\x5a\xab\xe3\x44\x5d\xaf\x23\x94\xad\xde\x1d\x26\xe2\xfd\x7a\x2c\xcd\xd5\x51\x4e\xc4\xff\x97\xa3\xa8\xc5\xbe\x68\xa7\xa5\xf7\xa3\x5a\xf1\xcf\x2f\xe2\x9d\x33\xb3\x9f\x6e\xbb\x5e\x8d\x85\xd3\x81\xab\x95\x33\xb1\x9f\x6a\x90\x0e\xad\x3e\xec\x93\x34\x4f\x3b\x01\x4a\xdb\x39\xc7\x4c\xb4\xd6\x9b\xd3\xbf\x19\x12\xa4\xb0\xe7\x6d\xc9\x7b\xc7\x36\x53\xfd\x61\xbe\xff\x8a\x13\xac\x4b\xba\x03\xbe\x39\xad\xb9\xec\x9e\x60\x0e\xb2\xab\xa9\x3a\xb4\x8d\x69\xa2\x76\x3f\xb1\x51\x2c\xbb\x9a\x04\x4b\x88\x6b\x2a\xf2\x5f\x24\x68\x21\x66\x85\x52\x8d\x90\x7b\x33\x85\x04\xc1\x30\x28\x2e\x49\x10\xcc\x4a\x67\x60\x0a\x9f\x23\x8c\xa3\xb9\x84\x33\x34\x9c\x0b\x5b\x9c\x7b\xe4\x42\x9b\x70\x96\x0b\x7d\x3a\x59\x0a\x94\xe2\xec\xa1\x83\xab\xdb\xbb\xa5\x70\x7b\xeb\x11\x36\x11\x41\xad\xf2\xf3\xee\xe7\xf4\x12\x12\x48\x61\x33\x08\x63\xd9\xe9\xe1\xc3\xec\xcd\x59\x49\x82\x24\x17\xac\x7d\x42\x43\x67\xce\xab\x24\x09\xcd\x95\xe4\xcf\x98\x3f\x35\x49\x12\xca\x0a\xd5\x70\x69\xa7\xa5\x80\x3d\xac\x70\xd0\x8a\xd1\x92\xf7\x4e\xc1\x23\xa4\xee\x5f\xc1\xe0\x0f\xd2\x85\xd8\x17\x95\xf9\xec\xc8\x03\xf9\x1b\x00\x00\xff\xff\xd1\x94\xca\x61\x82\x06\x00\x00")

func scriptsTerm_winPiscBytes() ([]byte, error) {
	return bindataRead(
		_scriptsTerm_winPisc,
		"scripts/term_win.pisc",
	)
}

func scriptsTerm_winPisc() (*asset, error) {
	bytes, err := scriptsTerm_winPiscBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/term_win.pisc", size: 1666, mode: os.FileMode(436), modTime: time.Unix(1506675243, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"scripts/.lib.pisc.swp": scriptsLibPiscSwp,
	"scripts/.term_posix.pisc.swp": scriptsTerm_posixPiscSwp,
	"scripts/backstory.txt": scriptsBackstoryTxt,
	"scripts/gamesave.pisc": scriptsGamesavePisc,
	"scripts/intro.pisc": scriptsIntroPisc,
	"scripts/lib.pisc": scriptsLibPisc,
	"scripts/main.pisc": scriptsMainPisc,
	"scripts/map.pisc": scriptsMapPisc,
	"scripts/markets.pisc": scriptsMarketsPisc,
	"scripts/ships.pisc": scriptsShipsPisc,
	"scripts/term_posix.pisc": scriptsTerm_posixPisc,
	"scripts/term_win.pisc": scriptsTerm_winPisc,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"scripts": &bintree{nil, map[string]*bintree{
		".lib.pisc.swp": &bintree{scriptsLibPiscSwp, map[string]*bintree{}},
		".term_posix.pisc.swp": &bintree{scriptsTerm_posixPiscSwp, map[string]*bintree{}},
		"backstory.txt": &bintree{scriptsBackstoryTxt, map[string]*bintree{}},
		"gamesave.pisc": &bintree{scriptsGamesavePisc, map[string]*bintree{}},
		"intro.pisc": &bintree{scriptsIntroPisc, map[string]*bintree{}},
		"lib.pisc": &bintree{scriptsLibPisc, map[string]*bintree{}},
		"main.pisc": &bintree{scriptsMainPisc, map[string]*bintree{}},
		"map.pisc": &bintree{scriptsMapPisc, map[string]*bintree{}},
		"markets.pisc": &bintree{scriptsMarketsPisc, map[string]*bintree{}},
		"ships.pisc": &bintree{scriptsShipsPisc, map[string]*bintree{}},
		"term_posix.pisc": &bintree{scriptsTerm_posixPisc, map[string]*bintree{}},
		"term_win.pisc": &bintree{scriptsTerm_winPisc, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

