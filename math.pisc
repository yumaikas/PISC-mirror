:DOC >double ( x -- d ) Coerce a number to a double ;
:DOC acos ( x -- y ) Arc cosine ; 
:DOC acosh ( x -- y ) Hyperbolic arc cosine ; 
:DOC asin ( x -- y ) Arc sine ; 
:DOC asinh ( x -- y ) Hyperbolic arc sine ; 
:DOC atan ( x -- y ) Arc tangent ; 
:DOC atanh ( x -- y ) Hyperbolic arc tanget ; 
:DOC cbrt ( x -- y ) Cube root ; 
:DOC ceil ( x -- y ) Ceiling of a double precision number ; 
:DOC cos ( x -- y ) Cosine ; 
:DOC cosh ( x -- y ) Hyperbolic cosine ; 
:DOC erf ( x -- y ) Error function ; 
:DOC erfc ( x -- y ) Complementary error function ; 
:DOC exp ( x -- y ) Exponentiation ; 
:DOC exp2 ( x -- y ) Two the power of `x` ; 
:DOC expm1 ( x -- y ) `exp 1 -`, more precise for small numbers  ; 
:DOC floor ( x -- y ) Floor of a double precision number ; 
:DOC gamma ( x -- y ) Gamma function TODO ; 
:DOC j0 ( x -- y ) j0 Bessel function ; 
:DOC j1 ( x -- y ) First kind Bessel function ; 
:DOC log ( x -- y ) Natural Logarithm ;  
:DOC log10 ( x -- y ) Log base 10 ; 
:DOC log1p ( x -- y ) `x 1 + log `, but more accurate with small values ; 
:DOC log2 ( x -- y ) Log base 2 ; 
:DOC logb ( x -- y ) Binary exponent of x ; 
:DOC sin ( x -- y ) Sine function ; 
:DOC sinh ( x -- y ) Hyperbolic sine function ; 
:DOC sqrt ( x -- y ) Square root function ; 
:DOC tan ( x -- y ) Tangent function ; 
:DOC tanh ( x -- y ) Hyperbolic tangent function ; 
:DOC trunc ( x -- y ) Integer value of x, as a double ; 
:DOC y0 ( x -- y ) Order-zero Bessel function of the second kind ; 
:DOC y1 ( x -- y ) Order-one Bessel function of the second kind ; 
/*
TODO: all the two arg math functions
*/
: min ( a b -- smaller ) 2dup > [ nip ] [ drop ] if ;
: max ( a b -- larger )   2dup > [ drop ] [ nip ] if ;