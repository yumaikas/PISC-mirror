"tests/test_root.pisc" import

"String basics" <test-suite> :string-suite

"Concatenation and joins" [
	"\"a\" and \"b\" concat to \"ab\""
		[ "a" "b" str-concat ] [ "ab" ] assert
	"\"Longer\" \"strings\" concat to \"Longerstrings\""
		[ "Longer" "strings" str-concat ] [ "Longerstrings" ] assert
	"Arrays of strings concat as expected" 
		[ { "one" "two" "three" } "-" str-join ] [ "one-two-three" ] assert
] $string-suite .addTest

"Conversions of types" [
	"12" [ 12 >string ] [ "12" ] assert
	"-14" [ -14 >string ] [ "-14" ] assert
	"34.2" [ 34.2 >string ] [ "34.2" ] assert
	# TODO: consider finding a more self-representative 
	# way of converting collections to strings
	"{ 1 2 3 }" [ { 1 2 3 } >string ] [ "[1 2 3]" ] assert
	"str>int" [ "123" str>int ] [ 123 ] assert
] $string-suite .addTest

"Iteration and readers" [
	"each-char" [ { "abc" [ ] each-char } ] [ { "a" "b" "c" } ] assert
] $string-suite .addTest

"Contains and ending/starting" [
	"str-ends?" [ 
		"abcde" "cde" str-ends? 
		"abcde" "cd" str-ends? 
	] [ t f ] assert
	"str-substr 0:2" [ "abcde" 0 2 str-substr ] [ "ab" ] assert
	"str-substr 0:4" [ "abcde" 0 4 str-substr ] [ "abcd" ] assert
	"str-substr 1:4" [ "abcde" 1 4 str-substr ] [ "bcd" ] assert
	"str-idx-of" [ "abcde" "c" str-idx-of ] [ 2 ] assert
	# TODO Figure out unicode tests? 
] $string-suite .addTest

$string-suite .runTests