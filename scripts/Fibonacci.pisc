# Based on https://github.com/Shopify/go-lua

# This version of fibionacci simply takes *way* too long. 
# I might use it for profiling word dispatches.
: fib-recurse ( a -- b ) 
	:n

	$n 0 = [ 0 ] when
	$n 1 = [ 1 ] when
	$n 1 > [ 
		$n 1 - fib-recurse
		$n 2 - fib-recurse +
	] when
;

# Runs at a reasonable speed for fib(35)
: fib-tail ( n -- b ) :n 0 1 $n do-fib-tail ;

/* This is the tail-recursive version of fibionacci */
: do-fib-tail ( a b n -- q ) 
	:c :n1 :n0
	$c zero? [ $n0 ] when
	$c 1 = [ $n1 ] when
	$c 1 > [ $n1  $n0 $n1 +  $c 1 - do-fib-tail ] when
;

/* Currently the fastest way to calculate fibonacci numbers by far, only 3x slower than Lua 5.2 (not LuaJIT) */
: fib-iterate ( n -- q ) 
	:n
	$n zero? [ 0 ] when
	$n 1 = [ 1 ] when

	$n 1 > [ 
		0 :n0 1 :n1

		$n 1 - [ 
			# Using the stack as temp space
			$n0 $n1 + $n1 :n0 :n1
		] times
		$n1
	] when
;