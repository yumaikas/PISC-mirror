
: handle-ping ( conn message -- was-ping ) 
	:msg :conn
	$msg .command "PING" str-eq? :was-ping
	$was-ping [
		$msg .params 0 vec-at :resp-key
		${ "PONG :" $resp-key } :resp 
		$resp $conn .send-message
	] when
	$was-ping
;

: irc-pong-server! ( addr -- )
	:addr
	"Before trying to connect" println
	$addr irc-dial :conn

	/* Get the server MOTD and the like */
	"PASS 0" $conn .send-message
	"NICK pisc-bot" $conn .send-message
	$conn dup .recieve-message handle-ping drop
	"USER piscbot piscbot i :piscbot" $conn .send-message
	$conn dup .recieve-message handle-ping drop

	t :reading-motd
	[ $reading-motd ] [
		$conn .recieve-message :msg
		$conn $msg handle-ping :junk
		$msg .raw-str println
		/* Waiting for a MODE command so we know that MOTD has been finished */
		$msg .command "MODE" str-eq? not :reading-motd
	] while

	"JOIN #botwars" $conn .send-message
	# "PRIVMSG #alakajam :!ping-bot to test me." $conn .send-message

	[ t ] [
		"Awaiting a message" println
		$conn .recieve-message :msg
		${ $msg .command " " } println
		$conn $msg handle-ping not [
			${ "<" $msg .params "><" str-join ">" } println
			$msg .params " " str-join :args
			$args "!ping-bot" str-contains? [
				"PRIVMSG #botwars :pong-bot!" $conn .send-message
			] when
			$args "!ping-leave" str-contains? [
				"QUIT :Fare thee well!" $conn .send-message
			] when
		] when
	] while
	$conn .close
;

: freenode-pong-server ( -- ) "irc.freenode.com:6667" irc-pong-server! ;
: afternet-pong-server ( -- ) "irc.afternet.org:6667" irc-pong-server! ;